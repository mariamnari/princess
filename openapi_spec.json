{
  "openapi": "3.0.2",
  "info": {
    "title": "cli-project",
    "version": "1.0.0"
  },
  "paths": {
    "/v1/authorize": {
      "post": {
        "tags": [
          "Authorization"
        ],
        "summary": "testagain",
        "description": "test description",
        "operationId": "Authorization_authorize",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_token": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "token_type": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "expiry": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    }
                  },
                  "required": [
                    "access_token",
                    "token_type",
                    "expiry"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "",
                      "example": "Incorrect client_id or client_secret"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "",
                      "example": "Access forbidden"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "array",
                      "description": "",
                      "example": [
                        [
                          [
                            []
                          ],
                          "",
                          ""
                        ]
                      ],
                      "items": {
                        "type": "object",
                        "properties": {
                          "loc": {
                            "type": "array",
                            "description": "",
                            "example": [
                              []
                            ],
                            "items": {
                              "type": "object",
                              "properties": {}
                            }
                          },
                          "msg": {
                            "type": "string",
                            "description": "",
                            "example": ""
                          },
                          "type": {
                            "type": "string",
                            "description": "",
                            "example": ""
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "required": true,
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "client_id": {
                    "type": "string",
                    "description": "",
                    "example": ""
                  },
                  "client_secret": {
                    "type": "string",
                    "description": "",
                    "example": ""
                  }
                },
                "required": [
                  "client_id",
                  "client_secret"
                ]
              }
            }
          }
        }
      }
    },
    "/v1/mcc": {
      "post": {
        "tags": [
          "Retail"
        ],
        "summary": "Merchant Category Classification",
        "description": "Computer Vision APIs to Digitize MSME Onboarding Documents.",
        "operationId": "Retail_merchant-category-classification",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "",
                      "example": "Unsupported file type, only .jpeg, .jpg, .png file formats are supported"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "array",
                      "description": "",
                      "example": [
                        [
                          [
                            []
                          ],
                          "",
                          ""
                        ]
                      ],
                      "items": {
                        "type": "object",
                        "properties": {
                          "loc": {
                            "type": "array",
                            "description": "",
                            "example": [
                              []
                            ],
                            "items": {
                              "type": "object",
                              "properties": {}
                            }
                          },
                          "msg": {
                            "type": "string",
                            "description": "",
                            "example": ""
                          },
                          "type": {
                            "type": "string",
                            "description": "",
                            "example": ""
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "",
                    "example": "",
                    "format": "binary"
                  }
                },
                "required": [
                  "file"
                ]
              }
            }
          }
        }
      }
    },
    "/v1/displayboard": {
      "post": {
        "tags": [
          "Retail"
        ],
        "summary": "Displayboard Recognition",
        "description": "Computer Vision APIs to Digitize MSME Onboarding Documents.",
        "operationId": "Retail_displayboard-recognition",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "",
                      "example": "Unsupported file type, only .jpeg, .jpg, .png file formats are supported"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "array",
                      "description": "",
                      "example": [
                        [
                          [
                            []
                          ],
                          "",
                          ""
                        ]
                      ],
                      "items": {
                        "type": "object",
                        "properties": {
                          "loc": {
                            "type": "array",
                            "description": "",
                            "example": [
                              []
                            ],
                            "items": {
                              "type": "object",
                              "properties": {}
                            }
                          },
                          "msg": {
                            "type": "string",
                            "description": "",
                            "example": ""
                          },
                          "type": {
                            "type": "string",
                            "description": "",
                            "example": ""
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "",
                    "example": "",
                    "format": "binary"
                  }
                },
                "required": [
                  "file"
                ]
              }
            }
          }
        }
      }
    },
    "/v1/facematch": {
      "post": {
        "tags": [
          "Risk & CDD"
        ],
        "summary": "Identity Matching",
        "description": "Deepvue.tech Realtime Facematch API lets you compare faces present in two different documents, within seconds.   \nTwo files required for this API can be images of two id-cards or one id-card and a selfie.   \n\nThis API performs a realtime AI-based face recognition and matching in the background,    \nreturns back with whether two faces match or not and a corresponding *confidence* value of the match.",
        "operationId": "Risk & CDD_identity-matching",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "description": "",
                      "example": {
                        "match": "",
                        "confidence": 0
                      },
                      "properties": {
                        "match": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "confidence": {
                          "type": "number",
                          "description": "",
                          "example": 0
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "",
                      "example": "Unsupported file type, only .jpeg, .jpg, .png file formats are supported"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "array",
                      "description": "",
                      "example": [
                        [
                          [
                            []
                          ],
                          "",
                          ""
                        ]
                      ],
                      "items": {
                        "type": "object",
                        "properties": {
                          "loc": {
                            "type": "array",
                            "description": "",
                            "example": [
                              []
                            ],
                            "items": {
                              "type": "object",
                              "properties": {}
                            }
                          },
                          "msg": {
                            "type": "string",
                            "description": "",
                            "example": ""
                          },
                          "type": {
                            "type": "string",
                            "description": "",
                            "example": ""
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file_a": {
                    "type": "string",
                    "description": "",
                    "example": "",
                    "format": "binary"
                  },
                  "file_b": {
                    "type": "string",
                    "description": "",
                    "example": "",
                    "format": "binary"
                  }
                },
                "required": [
                  "file_a",
                  "file_b"
                ]
              }
            }
          }
        }
      }
    },
    "/v1/ekyc/aadhaar/connect": {
      "get": {
        "tags": [
          "Offline Aadhaar eKYC"
        ],
        "summary": "Initiate Session",
        "description": "This API allows to initiate a session with UIDAI to fetch Captcha before passing the Aadhaar number of the customer. \n    ",
        "operationId": "Offline Aadhaar eKYC_initiate-session",
        "parameters": [
          {
            "name": "consent",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          },
          {
            "name": "purpose",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "timestamp": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "transaction_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "data": {
                      "type": "object",
                      "description": "",
                      "example": {
                        "session_id": "",
                        "captcha": ""
                      },
                      "properties": {
                        "session_id": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "captcha": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        }
                      }
                    }
                  },
                  "required": [
                    "code",
                    "timestamp",
                    "transaction_id",
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "array",
                      "description": "",
                      "example": [
                        [
                          [
                            []
                          ],
                          "",
                          ""
                        ]
                      ],
                      "items": {
                        "type": "object",
                        "properties": {
                          "loc": {
                            "type": "array",
                            "description": "",
                            "example": [
                              []
                            ],
                            "items": {
                              "type": "object",
                              "properties": {}
                            }
                          },
                          "msg": {
                            "type": "string",
                            "description": "",
                            "example": ""
                          },
                          "type": {
                            "type": "string",
                            "description": "",
                            "example": ""
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        }
      }
    },
    "/v1/ekyc/aadhaar/reload-captcha": {
      "get": {
        "tags": [
          "Offline Aadhaar eKYC"
        ],
        "summary": "Reload Captcha",
        "description": "This API can be used in case the user needs to reload the captcha or an invalid captcha is entered.\n    ",
        "operationId": "Offline Aadhaar eKYC_reload-captcha",
        "parameters": [
          {
            "name": "session_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          },
          {
            "name": "consent",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          },
          {
            "name": "purpose",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "timestamp": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "transaction_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "data": {
                      "type": "object",
                      "description": "",
                      "example": {
                        "captcha": ""
                      },
                      "properties": {
                        "captcha": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        }
                      }
                    }
                  },
                  "required": [
                    "code",
                    "timestamp",
                    "transaction_id",
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "array",
                      "description": "",
                      "example": [
                        [
                          [
                            []
                          ],
                          "",
                          ""
                        ]
                      ],
                      "items": {
                        "type": "object",
                        "properties": {
                          "loc": {
                            "type": "array",
                            "description": "",
                            "example": [
                              []
                            ],
                            "items": {
                              "type": "object",
                              "properties": {}
                            }
                          },
                          "msg": {
                            "type": "string",
                            "description": "",
                            "example": ""
                          },
                          "type": {
                            "type": "string",
                            "description": "",
                            "example": ""
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "timestamp": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "transaction_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "message": {
                      "type": "string",
                      "description": "",
                      "example": "Source Unavailable"
                    }
                  },
                  "required": [
                    "code",
                    "timestamp",
                    "transaction_id"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/ekyc/aadhaar/generate-otp": {
      "post": {
        "tags": [
          "Offline Aadhaar eKYC"
        ],
        "summary": "Generate Otp",
        "description": "This API will trigger OTP via UIDAI to Aadhaar registered mobile number.\n    ",
        "operationId": "Offline Aadhaar eKYC_generate-otp",
        "parameters": [
          {
            "name": "aadhaar_number",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          },
          {
            "name": "captcha",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          },
          {
            "name": "session_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          },
          {
            "name": "consent",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          },
          {
            "name": "purpose",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "timestamp": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "transaction_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "message": {
                      "type": "string",
                      "description": "",
                      "example": "OTP sent to your Registered Mobile number. Check your mobile."
                    }
                  },
                  "required": [
                    "code",
                    "timestamp",
                    "transaction_id"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "timestamp": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "transaction_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "message": {
                      "type": "string",
                      "description": "",
                      "example": "Invalid Aadhaar Number"
                    }
                  },
                  "required": [
                    "code",
                    "timestamp",
                    "transaction_id"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "timestamp": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "transaction_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "message": {
                      "type": "string",
                      "description": "",
                      "example": "Source Unavailable"
                    }
                  },
                  "required": [
                    "code",
                    "timestamp",
                    "transaction_id"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        }
      }
    },
    "/v1/ekyc/aadhaar/verify-otp": {
      "post": {
        "tags": [
          "Offline Aadhaar eKYC"
        ],
        "summary": "Verify Otp",
        "description": "This API will validate the OTP entered by the user to authenticate with UIDAI. Once successfully validated response will have the below details.   \n- Reference number\n- Resident’s name\n- Resident's address\n- Gender\n- Photo\n- Date of Birth\n- Mobile number in hashed form\n- Email in hashed form",
        "operationId": "Offline Aadhaar eKYC_verify-otp",
        "parameters": [
          {
            "name": "otp",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          },
          {
            "name": "session_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          },
          {
            "name": "consent",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          },
          {
            "name": "purpose",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          },
          {
            "name": "mobile_number",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "timestamp": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "transaction_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "message": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "data": {
                      "type": "object",
                      "description": "",
                      "example": {
                        "address": {
                          "careOf": "",
                          "country": "",
                          "district": "",
                          "house": "",
                          "landmark": "",
                          "locality": "",
                          "pin": "",
                          "postOffice": "",
                          "state": "",
                          "street": "",
                          "subDistrict": "",
                          "vtc": ""
                        },
                        "dateOfBirth": "",
                        "email": "",
                        "gender": "",
                        "generatedAt": "",
                        "maskedNumber": "",
                        "name": "",
                        "phone": "",
                        "photo": ""
                      },
                      "properties": {
                        "address": {
                          "type": "object",
                          "description": "",
                          "example": {
                            "careOf": "",
                            "country": "",
                            "district": "",
                            "house": "",
                            "landmark": "",
                            "locality": "",
                            "pin": "",
                            "postOffice": "",
                            "state": "",
                            "street": "",
                            "subDistrict": "",
                            "vtc": ""
                          },
                          "properties": {
                            "careOf": {
                              "type": "string",
                              "description": "",
                              "example": ""
                            },
                            "country": {
                              "type": "string",
                              "description": "",
                              "example": ""
                            },
                            "district": {
                              "type": "string",
                              "description": "",
                              "example": ""
                            },
                            "house": {
                              "type": "string",
                              "description": "",
                              "example": ""
                            },
                            "landmark": {
                              "type": "string",
                              "description": "",
                              "example": ""
                            },
                            "locality": {
                              "type": "string",
                              "description": "",
                              "example": ""
                            },
                            "pin": {
                              "type": "string",
                              "description": "",
                              "example": ""
                            },
                            "postOffice": {
                              "type": "string",
                              "description": "",
                              "example": ""
                            },
                            "state": {
                              "type": "string",
                              "description": "",
                              "example": ""
                            },
                            "street": {
                              "type": "string",
                              "description": "",
                              "example": ""
                            },
                            "subDistrict": {
                              "type": "string",
                              "description": "",
                              "example": ""
                            },
                            "vtc": {
                              "type": "string",
                              "description": "",
                              "example": ""
                            }
                          }
                        },
                        "dateOfBirth": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "email": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "gender": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "generatedAt": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "maskedNumber": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "name": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "phone": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "photo": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        }
                      }
                    }
                  },
                  "required": [
                    "code",
                    "timestamp",
                    "transaction_id",
                    "message",
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "array",
                      "description": "",
                      "example": [
                        [
                          [
                            []
                          ],
                          "",
                          ""
                        ]
                      ],
                      "items": {
                        "type": "object",
                        "properties": {
                          "loc": {
                            "type": "array",
                            "description": "",
                            "example": [
                              []
                            ],
                            "items": {
                              "type": "object",
                              "properties": {}
                            }
                          },
                          "msg": {
                            "type": "string",
                            "description": "",
                            "example": ""
                          },
                          "type": {
                            "type": "string",
                            "description": "",
                            "example": ""
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "timestamp": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "transaction_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "message": {
                      "type": "string",
                      "description": "",
                      "example": "Source Unavailable"
                    }
                  },
                  "required": [
                    "code",
                    "timestamp",
                    "transaction_id"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        }
      }
    },
    "/v1/verification/aadhaar": {
      "get": {
        "tags": [
          "KYC APIs"
        ],
        "summary": "Aadhaar Basic Verification",
        "description": "Aadhaar is an important identification document used by businesses to establish identity of user for customer KYC.   \n\nWith Aadhaar Verification, just enter the 12-digit Aadhaar number and know whether the Aadhaar is valid or not   \nalong with details like *age_band*, *gender*, *state* and the last three digits of their registered *mobile_number*, in seconds.   \n\nKey Features of this API are:   \n✅ Online Aadhaar Verification   \n✅ Simple & easy integration   \n✅ Verification status in real-time   ",
        "operationId": "KYC APIs_aadhaar-basic-verification",
        "parameters": [
          {
            "name": "aadhaar_number",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "timestamp": {
                      "type": "integer",
                      "description": "",
                      "example": 1697741746340
                    },
                    "transaction_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "sub_code": {
                      "type": "string",
                      "description": "",
                      "example": "SUCCESS"
                    },
                    "message": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "data": {
                      "type": "object",
                      "description": "",
                      "example": {
                        "age_range": "",
                        "aadhaar_number": "",
                        "state": "",
                        "gender": "",
                        "last_digits": "",
                        "is_mobile": false
                      },
                      "properties": {
                        "age_range": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "aadhaar_number": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "state": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "gender": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "last_digits": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "is_mobile": {
                          "type": "boolean",
                          "description": "",
                          "example": false
                        }
                      }
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "array",
                      "description": "",
                      "example": [
                        [
                          [
                            []
                          ],
                          "",
                          ""
                        ]
                      ],
                      "items": {
                        "type": "object",
                        "properties": {
                          "loc": {
                            "type": "array",
                            "description": "",
                            "example": [
                              []
                            ],
                            "items": {
                              "type": "object",
                              "properties": {}
                            }
                          },
                          "msg": {
                            "type": "string",
                            "description": "",
                            "example": ""
                          },
                          "type": {
                            "type": "string",
                            "description": "",
                            "example": ""
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "timestamp": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "transaction_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "message": {
                      "type": "string",
                      "description": "",
                      "example": "Source Unavailable"
                    }
                  },
                  "required": [
                    "code",
                    "timestamp",
                    "transaction_id"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/verification/panbasic": {
      "get": {
        "tags": [
          "KYC APIs"
        ],
        "summary": "Pan Basic Verification",
        "description": "The primary objective of PAN is to use a universal identification key to track financial transactions that might\nhave a taxable component to prevent tax evasion.   \n\nThe PAN number remains unaffected by the change of address throughout India.   \nThis API lets you verify PANs. You can also check whether the given PAN is valid or not.   \nYou will get basic information such as *Name*, *Category*, and *Status* of PAN.   \n\nVerify PAN numbers by taking in the pan and receiving information pertaining to the PAN.   ",
        "operationId": "KYC APIs_pan-basic-verification",
        "parameters": [
          {
            "name": "pan_number",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "timestamp": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "transaction_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "message": {
                      "type": "string",
                      "description": "",
                      "example": "Invalid Pan pattern"
                    }
                  },
                  "required": [
                    "code",
                    "timestamp",
                    "transaction_id"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "timestamp": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "transaction_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "message": {
                      "type": "string",
                      "description": "",
                      "example": "Source Unavailable"
                    }
                  },
                  "required": [
                    "code",
                    "timestamp",
                    "transaction_id"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/verification/panadvanced": {
      "get": {
        "tags": [
          "KYC APIs"
        ],
        "summary": "Pan Advanced Verification",
        "description": "The Advance Authentication API provides additional details compared to Basic Authentication.    \nThe Additional information are *last_name*, *last_updated* date of PAN ,and *aadhar_seeding_status*. ",
        "operationId": "KYC APIs_pan-advanced-verification",
        "parameters": [
          {
            "name": "pan_number",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "timestamp": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "transaction_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "message": {
                      "type": "string",
                      "description": "",
                      "example": "Invalid Pan pattern"
                    }
                  },
                  "required": [
                    "code",
                    "timestamp",
                    "transaction_id"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "timestamp": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "transaction_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "message": {
                      "type": "string",
                      "description": "",
                      "example": "Source Unavailable"
                    }
                  },
                  "required": [
                    "code",
                    "timestamp",
                    "transaction_id"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/verification/pan-plus": {
      "get": {
        "tags": [
          "KYC APIs"
        ],
        "summary": "Pan Plus Verification",
        "description": "The Pan Plus Authentication API provides additional details compared to Advanced Authentication.    \nVerify additional details such as DOB, Gender, Email, Phone, Address from PAN Number.",
        "operationId": "KYC APIs_pan-plus-verification",
        "parameters": [
          {
            "name": "pan_number",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "timestamp": {
                      "type": "integer",
                      "description": "",
                      "example": 1697741746340
                    },
                    "transaction_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "sub_code": {
                      "type": "string",
                      "description": "",
                      "example": "SUCCESS"
                    },
                    "message": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "data": {
                      "type": "object",
                      "description": "",
                      "example": {
                        "pan_number": "",
                        "full_name": "",
                        "full_name_split": [
                          []
                        ],
                        "masked_aadhaar": "",
                        "address": {
                          "line_1": "",
                          "line_2": "",
                          "street_name": "",
                          "zip": "",
                          "city": "",
                          "state": "",
                          "country": "",
                          "full": ""
                        },
                        "email": "",
                        "phone_number": "",
                        "gender": "",
                        "dob": "",
                        "aadhaar_linked": false,
                        "category": ""
                      },
                      "properties": {
                        "pan_number": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "full_name": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "full_name_split": {
                          "type": "array",
                          "description": "",
                          "example": [
                            []
                          ],
                          "items": {
                            "type": "object",
                            "properties": {}
                          }
                        },
                        "masked_aadhaar": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "address": {
                          "type": "object",
                          "description": "",
                          "example": {
                            "line_1": "",
                            "line_2": "",
                            "street_name": "",
                            "zip": "",
                            "city": "",
                            "state": "",
                            "country": "",
                            "full": ""
                          },
                          "properties": {
                            "line_1": {
                              "type": "string",
                              "description": "",
                              "example": ""
                            },
                            "line_2": {
                              "type": "string",
                              "description": "",
                              "example": ""
                            },
                            "street_name": {
                              "type": "string",
                              "description": "",
                              "example": ""
                            },
                            "zip": {
                              "type": "string",
                              "description": "",
                              "example": ""
                            },
                            "city": {
                              "type": "string",
                              "description": "",
                              "example": ""
                            },
                            "state": {
                              "type": "string",
                              "description": "",
                              "example": ""
                            },
                            "country": {
                              "type": "string",
                              "description": "",
                              "example": ""
                            },
                            "full": {
                              "type": "string",
                              "description": "",
                              "example": ""
                            }
                          }
                        },
                        "email": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "phone_number": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "gender": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "dob": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "aadhaar_linked": {
                          "type": "boolean",
                          "description": "",
                          "example": false
                        },
                        "category": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        }
                      }
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "timestamp": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "transaction_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "data": {
                      "type": "object",
                      "description": "",
                      "example": {
                        "pan_number": "",
                        "full_name": "",
                        "full_name_split": [
                          []
                        ],
                        "masked_aadhaar": "",
                        "address": {
                          "line_1": "",
                          "line_2": "",
                          "street_name": "",
                          "zip": "",
                          "city": "",
                          "state": "",
                          "country": "",
                          "full": ""
                        },
                        "email": "",
                        "phone_number": "",
                        "gender": "",
                        "dob": "",
                        "aadhaar_linked": false,
                        "category": ""
                      },
                      "properties": {
                        "pan_number": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "full_name": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "full_name_split": {
                          "type": "array",
                          "description": "",
                          "example": [
                            []
                          ],
                          "items": {
                            "type": "object",
                            "properties": {}
                          }
                        },
                        "masked_aadhaar": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "address": {
                          "type": "object",
                          "description": "",
                          "example": {
                            "line_1": "",
                            "line_2": "",
                            "street_name": "",
                            "zip": "",
                            "city": "",
                            "state": "",
                            "country": "",
                            "full": ""
                          },
                          "properties": {
                            "line_1": {
                              "type": "string",
                              "description": "",
                              "example": ""
                            },
                            "line_2": {
                              "type": "string",
                              "description": "",
                              "example": ""
                            },
                            "street_name": {
                              "type": "string",
                              "description": "",
                              "example": ""
                            },
                            "zip": {
                              "type": "string",
                              "description": "",
                              "example": ""
                            },
                            "city": {
                              "type": "string",
                              "description": "",
                              "example": ""
                            },
                            "state": {
                              "type": "string",
                              "description": "",
                              "example": ""
                            },
                            "country": {
                              "type": "string",
                              "description": "",
                              "example": ""
                            },
                            "full": {
                              "type": "string",
                              "description": "",
                              "example": ""
                            }
                          }
                        },
                        "email": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "phone_number": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "gender": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "dob": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "aadhaar_linked": {
                          "type": "boolean",
                          "description": "",
                          "example": false
                        },
                        "category": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        }
                      }
                    }
                  },
                  "required": [
                    "code",
                    "timestamp",
                    "transaction_id",
                    "data"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "timestamp": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "transaction_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "message": {
                      "type": "string",
                      "description": "",
                      "example": "Source Unavailable"
                    }
                  },
                  "required": [
                    "code",
                    "timestamp",
                    "transaction_id"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/verification/bankaccount": {
      "get": {
        "tags": [
          "KYC APIs"
        ],
        "summary": "Bank Account Verification",
        "description": "Bank account verification or penny drop check is a way to verify the authenticity of a customer's bank account.\nWe take the Bank Account details and deposit 1 INR into the account. In return, we are able to fetch the Account Information\n\nThe API verifies a bank account and IFSC code combination.    \n\nA successful response is billable only in case of a 200 Response Status Code.",
        "operationId": "KYC APIs_bank-account-verification",
        "parameters": [
          {
            "name": "account_number",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          },
          {
            "name": "ifsc",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "424": {
            "description": "Failed Dependency",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "timestamp": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "transaction_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "message": {
                      "type": "string",
                      "description": "",
                      "example": "Source Unavailable"
                    }
                  },
                  "required": [
                    "code",
                    "timestamp",
                    "transaction_id"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/verification/ifsc": {
      "get": {
        "tags": [
          "KYC APIs"
        ],
        "summary": "Ifsc Verification",
        "description": "IFSC code is a unique identifier for a bank branch. Businesses verify IFSC before performing penny-drop to ensure successful payouts.   \n\nVerify IFSC code and receive details of the bank branch associated with that IFSC Code.    \n\nIFSC Verification API helps verifying IFSC code against RBI's IFSC Master and provide bank & branch details.   ",
        "operationId": "KYC APIs_ifsc-verification",
        "parameters": [
          {
            "name": "ifsc",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "timestamp": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "transaction_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "message": {
                      "type": "string",
                      "description": "",
                      "example": "Valid IFSC"
                    },
                    "data": {
                      "type": "object",
                      "description": "",
                      "example": {
                        "MICR": "110485040",
                        "BRANCH": "NOIDA",
                        "ADDRESS": "GROUND FLOOR, H-1/A -16, SECTOR 63, NOIDA - 201301",
                        "STATE": "DELHI",
                        "CONTACT": "120",
                        "UPI": true,
                        "RTGS": true,
                        "CITY": "DELHI",
                        "CENTRE": "DELHI",
                        "DISTRICT": "DELHI",
                        "NEFT": true,
                        "IMPS": true,
                        "SWIFT": "",
                        "ISO3166": "IN-DL",
                        "BANK": "Kotak Mahindra Bank",
                        "BANKCODE": "KKBK",
                        "IFSC": "KKBK0000180"
                      },
                      "properties": {
                        "MICR": {
                          "type": "string",
                          "description": "",
                          "example": "110485040"
                        },
                        "BRANCH": {
                          "type": "string",
                          "description": "",
                          "example": "NOIDA"
                        },
                        "ADDRESS": {
                          "type": "string",
                          "description": "",
                          "example": "GROUND FLOOR, H-1/A -16, SECTOR 63, NOIDA - 201301"
                        },
                        "STATE": {
                          "type": "string",
                          "description": "",
                          "example": "DELHI"
                        },
                        "CONTACT": {
                          "type": "string",
                          "description": "",
                          "example": "120"
                        },
                        "UPI": {
                          "type": "boolean",
                          "description": "",
                          "example": true
                        },
                        "RTGS": {
                          "type": "boolean",
                          "description": "",
                          "example": true
                        },
                        "CITY": {
                          "type": "string",
                          "description": "",
                          "example": "DELHI"
                        },
                        "CENTRE": {
                          "type": "string",
                          "description": "",
                          "example": "DELHI"
                        },
                        "DISTRICT": {
                          "type": "string",
                          "description": "",
                          "example": "DELHI"
                        },
                        "NEFT": {
                          "type": "boolean",
                          "description": "",
                          "example": true
                        },
                        "IMPS": {
                          "type": "boolean",
                          "description": "",
                          "example": true
                        },
                        "SWIFT": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "ISO3166": {
                          "type": "string",
                          "description": "",
                          "example": "IN-DL"
                        },
                        "BANK": {
                          "type": "string",
                          "description": "",
                          "example": "Kotak Mahindra Bank"
                        },
                        "BANKCODE": {
                          "type": "string",
                          "description": "",
                          "example": "KKBK"
                        },
                        "IFSC": {
                          "type": "string",
                          "description": "",
                          "example": "KKBK0000180"
                        }
                      }
                    }
                  },
                  "required": [
                    "code",
                    "timestamp",
                    "transaction_id",
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pascode": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "timestamp": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "transaction_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "message": {
                      "type": "string",
                      "description": "",
                      "example": "Invalid IFSC"
                    }
                  },
                  "required": [
                    "pascode",
                    "timestamp",
                    "transaction_id"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/verification/upi": {
      "get": {
        "tags": [
          "KYC APIs"
        ],
        "summary": "Upi Verification",
        "description": "You can verify the UPI details of your customer before adding them to your payouts account using the UPI Verification feature.\nThis helps you in making successful transfers to your customers.\n\nSome of the businesses may want to verify the customer name against the UPI, or if want to validate if the given UPI exists, this can be done instantly with UPI Verification.\n\nThe API verifies a UPI ID. A successful response is billable only in case of a 200 Response Status Code.",
        "operationId": "KYC APIs_upi-verification",
        "parameters": [
          {
            "name": "vpa",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "timestamp": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "transaction_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "message": {
                      "type": "string",
                      "description": "",
                      "example": "Invalid UPI VPA provided"
                    }
                  },
                  "required": [
                    "code",
                    "timestamp",
                    "transaction_id"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        }
      }
    },
    "/v1/verification/post-driving-license": {
      "post": {
        "tags": [
          "Async KYC APIs"
        ],
        "summary": "Async Post Driving License Verification",
        "description": "The Driving License Verification API instantly verifies details of a driving license by confirming them from the Government database.   \nThis makes your onboarding process safer, faster, and smarter. With Deepvue.tech's DL verification API,   \nyou can be confident that the individuals you onboard hold a valid DL and have provided you with the right identity proof.",
        "operationId": "Async KYC APIs_async-post-driving-license-verification",
        "parameters": [
          {
            "name": "dl_number",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          },
          {
            "name": "dob",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "request_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    }
                  },
                  "required": [
                    "request_id"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "array",
                      "description": "",
                      "example": [
                        [
                          [
                            []
                          ],
                          "",
                          ""
                        ]
                      ],
                      "items": {
                        "type": "object",
                        "properties": {
                          "loc": {
                            "type": "array",
                            "description": "",
                            "example": [
                              []
                            ],
                            "items": {
                              "type": "object",
                              "properties": {}
                            }
                          },
                          "msg": {
                            "type": "string",
                            "description": "",
                            "example": ""
                          },
                          "type": {
                            "type": "string",
                            "description": "",
                            "example": ""
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "timestamp": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "transaction_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "message": {
                      "type": "string",
                      "description": "",
                      "example": "Source Unavailable"
                    }
                  },
                  "required": [
                    "code",
                    "timestamp",
                    "transaction_id"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        }
      }
    },
    "/v1/verification/get-driving-license": {
      "get": {
        "tags": [
          "Async KYC APIs"
        ],
        "summary": "Async Get Driving License Verification",
        "description": "This API gives you back the complete result and verification details against your request id receieved in previous step.",
        "operationId": "Async KYC APIs_async-get-driving-license-verification",
        "parameters": [
          {
            "name": "request_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "array",
                      "description": "",
                      "example": [
                        [
                          [
                            []
                          ],
                          "",
                          ""
                        ]
                      ],
                      "items": {
                        "type": "object",
                        "properties": {
                          "loc": {
                            "type": "array",
                            "description": "",
                            "example": [
                              []
                            ],
                            "items": {
                              "type": "object",
                              "properties": {}
                            }
                          },
                          "msg": {
                            "type": "string",
                            "description": "",
                            "example": ""
                          },
                          "type": {
                            "type": "string",
                            "description": "",
                            "example": ""
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "timestamp": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "transaction_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "message": {
                      "type": "string",
                      "description": "",
                      "example": "Source Unavailable"
                    }
                  },
                  "required": [
                    "code",
                    "timestamp",
                    "transaction_id"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/verification/post-vehicle-rc": {
      "post": {
        "tags": [
          "Async KYC APIs"
        ],
        "summary": "Async Post Vehicle Registration Verification",
        "description": "The Vehicle Registration Verification API helps to establish a link between the vehicle and its owner, thereby minimizing the potential for fraud.   \nYou can now confidently onboard vehicles and individuals knowing that the vehicle is genuine, registered by an RTO, and associated with a specific individual.",
        "operationId": "Async KYC APIs_async-post-vehicle-registration-verification",
        "parameters": [
          {
            "name": "rc_number",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "request_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    }
                  },
                  "required": [
                    "request_id"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "array",
                      "description": "",
                      "example": [
                        [
                          [
                            []
                          ],
                          "",
                          ""
                        ]
                      ],
                      "items": {
                        "type": "object",
                        "properties": {
                          "loc": {
                            "type": "array",
                            "description": "",
                            "example": [
                              []
                            ],
                            "items": {
                              "type": "object",
                              "properties": {}
                            }
                          },
                          "msg": {
                            "type": "string",
                            "description": "",
                            "example": ""
                          },
                          "type": {
                            "type": "string",
                            "description": "",
                            "example": ""
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "timestamp": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "transaction_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "message": {
                      "type": "string",
                      "description": "",
                      "example": "Source Unavailable"
                    }
                  },
                  "required": [
                    "code",
                    "timestamp",
                    "transaction_id"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        }
      }
    },
    "/v1/verification/get-vehicle-rc": {
      "get": {
        "tags": [
          "Async KYC APIs"
        ],
        "summary": "Async Get Vehicle Registration Verification",
        "description": "This API gives you back the complete result and verification details against your request id receieved in previous step.",
        "operationId": "Async KYC APIs_async-get-vehicle-registration-verification",
        "parameters": [
          {
            "name": "request_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "array",
                      "description": "",
                      "example": [
                        [
                          [
                            []
                          ],
                          "",
                          ""
                        ]
                      ],
                      "items": {
                        "type": "object",
                        "properties": {
                          "loc": {
                            "type": "array",
                            "description": "",
                            "example": [
                              []
                            ],
                            "items": {
                              "type": "object",
                              "properties": {}
                            }
                          },
                          "msg": {
                            "type": "string",
                            "description": "",
                            "example": ""
                          },
                          "type": {
                            "type": "string",
                            "description": "",
                            "example": ""
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "timestamp": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "transaction_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "message": {
                      "type": "string",
                      "description": "",
                      "example": "Source Unavailable"
                    }
                  },
                  "required": [
                    "code",
                    "timestamp",
                    "transaction_id"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/verification/post-voter-id": {
      "post": {
        "tags": [
          "Async KYC APIs"
        ],
        "summary": "Async Post Voter Id Verification",
        "description": "The Voter Id Verification API instantly verifies details of a voter id number by confirming them from the Government database.   \nThis makes your onboarding process safer, faster, and smarter. With Deepvue.tech's Voter Id Verification API,   \nyou can be confident that the individuals you onboard hold a valid Voter Id and have provided you with the right identity proof.",
        "operationId": "Async KYC APIs_async-post-voter-id-verification",
        "parameters": [
          {
            "name": "epic_number",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "request_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    }
                  },
                  "required": [
                    "request_id"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "array",
                      "description": "",
                      "example": [
                        [
                          [
                            []
                          ],
                          "",
                          ""
                        ]
                      ],
                      "items": {
                        "type": "object",
                        "properties": {
                          "loc": {
                            "type": "array",
                            "description": "",
                            "example": [
                              []
                            ],
                            "items": {
                              "type": "object",
                              "properties": {}
                            }
                          },
                          "msg": {
                            "type": "string",
                            "description": "",
                            "example": ""
                          },
                          "type": {
                            "type": "string",
                            "description": "",
                            "example": ""
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "timestamp": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "transaction_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "message": {
                      "type": "string",
                      "description": "",
                      "example": "Source Unavailable"
                    }
                  },
                  "required": [
                    "code",
                    "timestamp",
                    "transaction_id"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        }
      }
    },
    "/v1/verification/get-voter-id": {
      "get": {
        "tags": [
          "Async KYC APIs"
        ],
        "summary": "Async Get Voter Id Verification",
        "description": "This API gives you back the complete result and verification details against your request id receieved in previous step.",
        "operationId": "Async KYC APIs_async-get-voter-id-verification",
        "parameters": [
          {
            "name": "request_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "array",
                      "description": "",
                      "example": [
                        [
                          [
                            []
                          ],
                          "",
                          ""
                        ]
                      ],
                      "items": {
                        "type": "object",
                        "properties": {
                          "loc": {
                            "type": "array",
                            "description": "",
                            "example": [
                              []
                            ],
                            "items": {
                              "type": "object",
                              "properties": {}
                            }
                          },
                          "msg": {
                            "type": "string",
                            "description": "",
                            "example": ""
                          },
                          "type": {
                            "type": "string",
                            "description": "",
                            "example": ""
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "timestamp": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "transaction_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "message": {
                      "type": "string",
                      "description": "",
                      "example": "Source Unavailable"
                    }
                  },
                  "required": [
                    "code",
                    "timestamp",
                    "transaction_id"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/verification/async/post-udyam-details": {
      "post": {
        "tags": [
          "Async KYC APIs"
        ],
        "summary": "Async Post Udyam Aadhaar Verification",
        "description": "Udyam Aadhaar Verification API allows you to verify details of Udyam Aadhaar Number from the Udyam aadhaar govt source.    \nThe API accepts a UAM number and responses with details about the Name of the Business, Major activity, Business Address, category type, expiration date, address, NIC Codes, etc.",
        "operationId": "Async KYC APIs_async-post-udyam-aadhaar-verification",
        "parameters": [
          {
            "name": "udyam_aadhaar_number",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "request_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    }
                  },
                  "required": [
                    "request_id"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "array",
                      "description": "",
                      "example": [
                        [
                          [
                            []
                          ],
                          "",
                          ""
                        ]
                      ],
                      "items": {
                        "type": "object",
                        "properties": {
                          "loc": {
                            "type": "array",
                            "description": "",
                            "example": [
                              []
                            ],
                            "items": {
                              "type": "object",
                              "properties": {}
                            }
                          },
                          "msg": {
                            "type": "string",
                            "description": "",
                            "example": ""
                          },
                          "type": {
                            "type": "string",
                            "description": "",
                            "example": ""
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "timestamp": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "transaction_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "message": {
                      "type": "string",
                      "description": "",
                      "example": "Source Unavailable"
                    }
                  },
                  "required": [
                    "code",
                    "timestamp",
                    "transaction_id"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        }
      }
    },
    "/v1/verification/async/get-udyam-details": {
      "get": {
        "tags": [
          "Async KYC APIs"
        ],
        "summary": "Async Get Udyam Aadhaar Verification",
        "description": "This API gives you back the complete result and verification details against your request id receieved in previous step.",
        "operationId": "Async KYC APIs_async-get-udyam-aadhaar-verification",
        "parameters": [
          {
            "name": "request_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "action": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "completed_at": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "created_at": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "group_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "request_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "result": {
                      "type": "object",
                      "description": "",
                      "example": {
                        "source_output": {
                          "general_details": {
                            "applied_date": "",
                            "commencement_date": "",
                            "date_of_inc": "",
                            "dic_name": "",
                            "enterprise_name": "",
                            "enterprise_type": "",
                            "major_activity": "",
                            "msme_di": "",
                            "organization_type": "",
                            "social_category": "",
                            "state": ""
                          },
                          "nic_details": [
                            [
                              {
                                "activity_type": "",
                                "date": "",
                                "nic_2_digit": "",
                                "nic_4_digit": "",
                                "nic_5_digit": ""
                              }
                            ]
                          ],
                          "official_address": {
                            "block": "",
                            "city": "",
                            "district": "",
                            "door": "",
                            "email": "",
                            "mobile": "",
                            "name_of_premises": "",
                            "pin": "",
                            "road": "",
                            "state": "",
                            "town": ""
                          },
                          "unit_details": [
                            [
                              {
                                "block": "",
                                "building": "",
                                "city": "",
                                "district": "",
                                "flat": "",
                                "pin": "",
                                "road": "",
                                "state": "",
                                "unit_name": "",
                                "village": ""
                              }
                            ]
                          ],
                          "status": ""
                        }
                      },
                      "properties": {
                        "source_output": {
                          "type": "object",
                          "description": "",
                          "example": {
                            "general_details": {
                              "applied_date": "",
                              "commencement_date": "",
                              "date_of_inc": "",
                              "dic_name": "",
                              "enterprise_name": "",
                              "enterprise_type": "",
                              "major_activity": "",
                              "msme_di": "",
                              "organization_type": "",
                              "social_category": "",
                              "state": ""
                            },
                            "nic_details": [
                              [
                                {
                                  "activity_type": "",
                                  "date": "",
                                  "nic_2_digit": "",
                                  "nic_4_digit": "",
                                  "nic_5_digit": ""
                                }
                              ]
                            ],
                            "official_address": {
                              "block": "",
                              "city": "",
                              "district": "",
                              "door": "",
                              "email": "",
                              "mobile": "",
                              "name_of_premises": "",
                              "pin": "",
                              "road": "",
                              "state": "",
                              "town": ""
                            },
                            "unit_details": [
                              [
                                {
                                  "block": "",
                                  "building": "",
                                  "city": "",
                                  "district": "",
                                  "flat": "",
                                  "pin": "",
                                  "road": "",
                                  "state": "",
                                  "unit_name": "",
                                  "village": ""
                                }
                              ]
                            ],
                            "status": ""
                          },
                          "properties": {
                            "general_details": {
                              "type": "object",
                              "description": "",
                              "example": {
                                "applied_date": "",
                                "commencement_date": "",
                                "date_of_inc": "",
                                "dic_name": "",
                                "enterprise_name": "",
                                "enterprise_type": "",
                                "major_activity": "",
                                "msme_di": "",
                                "organization_type": "",
                                "social_category": "",
                                "state": ""
                              },
                              "properties": {
                                "applied_date": {
                                  "type": "string",
                                  "description": "",
                                  "example": ""
                                },
                                "commencement_date": {
                                  "type": "string",
                                  "description": "",
                                  "example": ""
                                },
                                "date_of_inc": {
                                  "type": "string",
                                  "description": "",
                                  "example": ""
                                },
                                "dic_name": {
                                  "type": "string",
                                  "description": "",
                                  "example": ""
                                },
                                "enterprise_name": {
                                  "type": "string",
                                  "description": "",
                                  "example": ""
                                },
                                "enterprise_type": {
                                  "type": "string",
                                  "description": "",
                                  "example": ""
                                },
                                "major_activity": {
                                  "type": "string",
                                  "description": "",
                                  "example": ""
                                },
                                "msme_di": {
                                  "type": "string",
                                  "description": "",
                                  "example": ""
                                },
                                "organization_type": {
                                  "type": "string",
                                  "description": "",
                                  "example": ""
                                },
                                "social_category": {
                                  "type": "string",
                                  "description": "",
                                  "example": ""
                                },
                                "state": {
                                  "type": "string",
                                  "description": "",
                                  "example": ""
                                }
                              }
                            },
                            "nic_details": {
                              "type": "array",
                              "description": "",
                              "example": [
                                [
                                  {
                                    "activity_type": "",
                                    "date": "",
                                    "nic_2_digit": "",
                                    "nic_4_digit": "",
                                    "nic_5_digit": ""
                                  }
                                ]
                              ],
                              "items": {
                                "type": "object",
                                "properties": {
                                  "nic_details_1": {
                                    "type": "object",
                                    "description": "",
                                    "example": {
                                      "activity_type": "",
                                      "date": "",
                                      "nic_2_digit": "",
                                      "nic_4_digit": "",
                                      "nic_5_digit": ""
                                    },
                                    "properties": {
                                      "activity_type": {
                                        "type": "string",
                                        "description": "",
                                        "example": ""
                                      },
                                      "date": {
                                        "type": "string",
                                        "description": "",
                                        "example": ""
                                      },
                                      "nic_2_digit": {
                                        "type": "string",
                                        "description": "",
                                        "example": ""
                                      },
                                      "nic_4_digit": {
                                        "type": "string",
                                        "description": "",
                                        "example": ""
                                      },
                                      "nic_5_digit": {
                                        "type": "string",
                                        "description": "",
                                        "example": ""
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "official_address": {
                              "type": "object",
                              "description": "",
                              "example": {
                                "block": "",
                                "city": "",
                                "district": "",
                                "door": "",
                                "email": "",
                                "mobile": "",
                                "name_of_premises": "",
                                "pin": "",
                                "road": "",
                                "state": "",
                                "town": ""
                              },
                              "properties": {
                                "block": {
                                  "type": "string",
                                  "description": "",
                                  "example": ""
                                },
                                "city": {
                                  "type": "string",
                                  "description": "",
                                  "example": ""
                                },
                                "district": {
                                  "type": "string",
                                  "description": "",
                                  "example": ""
                                },
                                "door": {
                                  "type": "string",
                                  "description": "",
                                  "example": ""
                                },
                                "email": {
                                  "type": "string",
                                  "description": "",
                                  "example": ""
                                },
                                "mobile": {
                                  "type": "string",
                                  "description": "",
                                  "example": ""
                                },
                                "name_of_premises": {
                                  "type": "string",
                                  "description": "",
                                  "example": ""
                                },
                                "pin": {
                                  "type": "string",
                                  "description": "",
                                  "example": ""
                                },
                                "road": {
                                  "type": "string",
                                  "description": "",
                                  "example": ""
                                },
                                "state": {
                                  "type": "string",
                                  "description": "",
                                  "example": ""
                                },
                                "town": {
                                  "type": "string",
                                  "description": "",
                                  "example": ""
                                }
                              }
                            },
                            "unit_details": {
                              "type": "array",
                              "description": "",
                              "example": [
                                [
                                  {
                                    "block": "",
                                    "building": "",
                                    "city": "",
                                    "district": "",
                                    "flat": "",
                                    "pin": "",
                                    "road": "",
                                    "state": "",
                                    "unit_name": "",
                                    "village": ""
                                  }
                                ]
                              ],
                              "items": {
                                "type": "object",
                                "properties": {
                                  "unit_1": {
                                    "type": "object",
                                    "description": "",
                                    "example": {
                                      "block": "",
                                      "building": "",
                                      "city": "",
                                      "district": "",
                                      "flat": "",
                                      "pin": "",
                                      "road": "",
                                      "state": "",
                                      "unit_name": "",
                                      "village": ""
                                    },
                                    "properties": {
                                      "block": {
                                        "type": "string",
                                        "description": "",
                                        "example": ""
                                      },
                                      "building": {
                                        "type": "string",
                                        "description": "",
                                        "example": ""
                                      },
                                      "city": {
                                        "type": "string",
                                        "description": "",
                                        "example": ""
                                      },
                                      "district": {
                                        "type": "string",
                                        "description": "",
                                        "example": ""
                                      },
                                      "flat": {
                                        "type": "string",
                                        "description": "",
                                        "example": ""
                                      },
                                      "pin": {
                                        "type": "string",
                                        "description": "",
                                        "example": ""
                                      },
                                      "road": {
                                        "type": "string",
                                        "description": "",
                                        "example": ""
                                      },
                                      "state": {
                                        "type": "string",
                                        "description": "",
                                        "example": ""
                                      },
                                      "unit_name": {
                                        "type": "string",
                                        "description": "",
                                        "example": ""
                                      },
                                      "village": {
                                        "type": "string",
                                        "description": "",
                                        "example": ""
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "status": {
                              "type": "string",
                              "description": "",
                              "example": ""
                            }
                          }
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "description": "",
                      "example": "completed or in_progress or failed"
                    },
                    "task_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "type": {
                      "type": "string",
                      "description": "",
                      "example": "udyam_aadhaar"
                    }
                  },
                  "required": [
                    "action",
                    "completed_at",
                    "created_at",
                    "group_id",
                    "request_id",
                    "result",
                    "task_id"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "array",
                      "description": "",
                      "example": [
                        [
                          [
                            []
                          ],
                          "",
                          ""
                        ]
                      ],
                      "items": {
                        "type": "object",
                        "properties": {
                          "loc": {
                            "type": "array",
                            "description": "",
                            "example": [
                              []
                            ],
                            "items": {
                              "type": "object",
                              "properties": {}
                            }
                          },
                          "msg": {
                            "type": "string",
                            "description": "",
                            "example": ""
                          },
                          "type": {
                            "type": "string",
                            "description": "",
                            "example": ""
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/verification/async/post-udyog-details": {
      "post": {
        "tags": [
          "Async KYC APIs"
        ],
        "summary": "Async Post Udyog Aadhaar Verification",
        "description": "Udyog Aadhaar Verification API allows you to verify details of Udyog Aadhaar Number from the Udyam aadhaar govt source.    \nThe API accepts a UAM number and responses with details about the Name of the Business, Major activity, Business Address, category type, expiration date, address, NIC Codes, etc.",
        "operationId": "Async KYC APIs_async-post-udyog-aadhaar-verification",
        "parameters": [
          {
            "name": "udyog_aadhaar_number",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "request_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    }
                  },
                  "required": [
                    "request_id"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "array",
                      "description": "",
                      "example": [
                        [
                          [
                            []
                          ],
                          "",
                          ""
                        ]
                      ],
                      "items": {
                        "type": "object",
                        "properties": {
                          "loc": {
                            "type": "array",
                            "description": "",
                            "example": [
                              []
                            ],
                            "items": {
                              "type": "object",
                              "properties": {}
                            }
                          },
                          "msg": {
                            "type": "string",
                            "description": "",
                            "example": ""
                          },
                          "type": {
                            "type": "string",
                            "description": "",
                            "example": ""
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        }
      }
    },
    "/v1/verification/async/get-udyog-details": {
      "get": {
        "tags": [
          "Async KYC APIs"
        ],
        "summary": "Async Get Udyog Aadhaar Verification",
        "description": "This API gives you back the complete result and verification details against your request id receieved in previous step.",
        "operationId": "Async KYC APIs_async-get-udyog-aadhaar-verification",
        "parameters": [
          {
            "name": "request_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "action": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "completed_at": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "created_at": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "group_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "request_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "result": {
                      "type": "object",
                      "description": "",
                      "example": {
                        "source_output": {
                          "general_details": {
                            "applied_date": "",
                            "commencement_date": "",
                            "dic_name": "",
                            "enterprise_name": "",
                            "enterprise_type": "",
                            "expiry_date": "",
                            "major_activity": "",
                            "modified_date": "",
                            "social_category": "",
                            "state": ""
                          },
                          "nic_details": [
                            [
                              {
                                "activity_type": "",
                                "nic_2_digit": "",
                                "nic_4_digit": "",
                                "nic_5_digit": ""
                              }
                            ]
                          ],
                          "address_details": [
                            [
                              {
                                "area": "",
                                "city": "",
                                "district": "",
                                "door": "",
                                "name_of_premises": "",
                                "pin": "",
                                "road": "",
                                "state": ""
                              }
                            ]
                          ],
                          "status": ""
                        }
                      },
                      "properties": {
                        "source_output": {
                          "type": "object",
                          "description": "",
                          "example": {
                            "general_details": {
                              "applied_date": "",
                              "commencement_date": "",
                              "dic_name": "",
                              "enterprise_name": "",
                              "enterprise_type": "",
                              "expiry_date": "",
                              "major_activity": "",
                              "modified_date": "",
                              "social_category": "",
                              "state": ""
                            },
                            "nic_details": [
                              [
                                {
                                  "activity_type": "",
                                  "nic_2_digit": "",
                                  "nic_4_digit": "",
                                  "nic_5_digit": ""
                                }
                              ]
                            ],
                            "address_details": [
                              [
                                {
                                  "area": "",
                                  "city": "",
                                  "district": "",
                                  "door": "",
                                  "name_of_premises": "",
                                  "pin": "",
                                  "road": "",
                                  "state": ""
                                }
                              ]
                            ],
                            "status": ""
                          },
                          "properties": {
                            "general_details": {
                              "type": "object",
                              "description": "",
                              "example": {
                                "applied_date": "",
                                "commencement_date": "",
                                "dic_name": "",
                                "enterprise_name": "",
                                "enterprise_type": "",
                                "expiry_date": "",
                                "major_activity": "",
                                "modified_date": "",
                                "social_category": "",
                                "state": ""
                              },
                              "properties": {
                                "applied_date": {
                                  "type": "string",
                                  "description": "",
                                  "example": ""
                                },
                                "commencement_date": {
                                  "type": "string",
                                  "description": "",
                                  "example": ""
                                },
                                "dic_name": {
                                  "type": "string",
                                  "description": "",
                                  "example": ""
                                },
                                "enterprise_name": {
                                  "type": "string",
                                  "description": "",
                                  "example": ""
                                },
                                "enterprise_type": {
                                  "type": "string",
                                  "description": "",
                                  "example": ""
                                },
                                "expiry_date": {
                                  "type": "string",
                                  "description": "",
                                  "example": ""
                                },
                                "major_activity": {
                                  "type": "string",
                                  "description": "",
                                  "example": ""
                                },
                                "modified_date": {
                                  "type": "string",
                                  "description": "",
                                  "example": ""
                                },
                                "social_category": {
                                  "type": "string",
                                  "description": "",
                                  "example": ""
                                },
                                "state": {
                                  "type": "string",
                                  "description": "",
                                  "example": ""
                                }
                              }
                            },
                            "nic_details": {
                              "type": "array",
                              "description": "",
                              "example": [
                                [
                                  {
                                    "activity_type": "",
                                    "nic_2_digit": "",
                                    "nic_4_digit": "",
                                    "nic_5_digit": ""
                                  }
                                ]
                              ],
                              "items": {
                                "type": "object",
                                "properties": {
                                  "nic_details_1": {
                                    "type": "object",
                                    "description": "",
                                    "example": {
                                      "activity_type": "",
                                      "nic_2_digit": "",
                                      "nic_4_digit": "",
                                      "nic_5_digit": ""
                                    },
                                    "properties": {
                                      "activity_type": {
                                        "type": "string",
                                        "description": "",
                                        "example": ""
                                      },
                                      "nic_2_digit": {
                                        "type": "string",
                                        "description": "",
                                        "example": ""
                                      },
                                      "nic_4_digit": {
                                        "type": "string",
                                        "description": "",
                                        "example": ""
                                      },
                                      "nic_5_digit": {
                                        "type": "string",
                                        "description": "",
                                        "example": ""
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "address_details": {
                              "type": "array",
                              "description": "",
                              "example": [
                                [
                                  {
                                    "area": "",
                                    "city": "",
                                    "district": "",
                                    "door": "",
                                    "name_of_premises": "",
                                    "pin": "",
                                    "road": "",
                                    "state": ""
                                  }
                                ]
                              ],
                              "items": {
                                "type": "object",
                                "properties": {
                                  "address_1": {
                                    "type": "object",
                                    "description": "",
                                    "example": {
                                      "area": "",
                                      "city": "",
                                      "district": "",
                                      "door": "",
                                      "name_of_premises": "",
                                      "pin": "",
                                      "road": "",
                                      "state": ""
                                    },
                                    "properties": {
                                      "area": {
                                        "type": "string",
                                        "description": "",
                                        "example": ""
                                      },
                                      "city": {
                                        "type": "string",
                                        "description": "",
                                        "example": ""
                                      },
                                      "district": {
                                        "type": "string",
                                        "description": "",
                                        "example": ""
                                      },
                                      "door": {
                                        "type": "string",
                                        "description": "",
                                        "example": ""
                                      },
                                      "name_of_premises": {
                                        "type": "string",
                                        "description": "",
                                        "example": ""
                                      },
                                      "pin": {
                                        "type": "string",
                                        "description": "",
                                        "example": ""
                                      },
                                      "road": {
                                        "type": "string",
                                        "description": "",
                                        "example": ""
                                      },
                                      "state": {
                                        "type": "string",
                                        "description": "",
                                        "example": ""
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "status": {
                              "type": "string",
                              "description": "",
                              "example": ""
                            }
                          }
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "description": "",
                      "example": "completed or in_progress or failed"
                    },
                    "task_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "type": {
                      "type": "string",
                      "description": "",
                      "example": "udyog_aadhaar"
                    }
                  },
                  "required": [
                    "action",
                    "completed_at",
                    "created_at",
                    "group_id",
                    "request_id",
                    "result",
                    "task_id"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "array",
                      "description": "",
                      "example": [
                        [
                          [
                            []
                          ],
                          "",
                          ""
                        ]
                      ],
                      "items": {
                        "type": "object",
                        "properties": {
                          "loc": {
                            "type": "array",
                            "description": "",
                            "example": [
                              []
                            ],
                            "items": {
                              "type": "object",
                              "properties": {}
                            }
                          },
                          "msg": {
                            "type": "string",
                            "description": "",
                            "example": ""
                          },
                          "type": {
                            "type": "string",
                            "description": "",
                            "example": ""
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/verification/gstinlite": {
      "get": {
        "tags": [
          "GST APIs"
        ],
        "summary": "Gstin Basic Verification",
        "description": "This API takes in the gstin of a business entity and provides you the information of the business entities as registered on the GST Portal.\n\nThe GSTIN Basic Verification API provides you the necessary information to verify an entity onboarding onto your workflow.   \nFor example, you can cross-check the information provided to you against the information available on the GST Portal using this API. ",
        "operationId": "GST APIs_gstin-basic-verification",
        "parameters": [
          {
            "name": "gstin_number",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "message": {
                      "type": "string",
                      "description": "",
                      "example": "Invalid GSTIN pattern"
                    },
                    "timestamp": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "transaction_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    }
                  },
                  "required": [
                    "code",
                    "timestamp",
                    "transaction_id"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/verification/gstin-advanced": {
      "get": {
        "tags": [
          "GST APIs"
        ],
        "summary": "Gstin Advanced Verification",
        "description": "This API takes in the gstin of a business entity and provides you the information of the business entities as registered on the GST Portal.\n\nVerifies basic GSTIN Details alongside advanced ones such as point of contact email & mobile, annual turnover and filing status and many more...",
        "operationId": "GST APIs_gstin-advanced-verification",
        "parameters": [
          {
            "name": "gstin_number",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "timestamp": {
                      "type": "integer",
                      "description": "",
                      "example": 1697741746340
                    },
                    "transaction_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "sub_code": {
                      "type": "string",
                      "description": "",
                      "example": "SUCCESS"
                    },
                    "message": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "data": {
                      "type": "object",
                      "description": "",
                      "example": {
                        "contact_details": {
                          "principal": {
                            "address": "",
                            "email": "",
                            "mobile": "",
                            "nature_of_business": ""
                          },
                          "additional": [
                            []
                          ]
                        },
                        "promoters": [
                          []
                        ],
                        "annual_turnover": "",
                        "annual_turnover_fy": "",
                        "percentage_in_cash_fy": "",
                        "percentage_in_cash": "",
                        "aadhaar_validation": "",
                        "aadhaar_validation_date": "",
                        "address_details": {},
                        "gstin": "",
                        "pan_number": "",
                        "business_name": "",
                        "legal_name": "",
                        "center_jurisdiction": "",
                        "state_jurisdiction": "",
                        "date_of_registration": "",
                        "constitution_of_business": "",
                        "taxpayer_type": "",
                        "gstin_status": "",
                        "date_of_cancellation": "",
                        "field_visit_conducted": "",
                        "nature_bus_activities": [
                          []
                        ],
                        "nature_of_core_business_activity_code": "",
                        "nature_of_core_business_activity_description": "",
                        "filing_status": [
                          []
                        ],
                        "address": "",
                        "hsn_info": {},
                        "filing_frequency": [
                          []
                        ]
                      },
                      "properties": {
                        "contact_details": {
                          "type": "object",
                          "description": "",
                          "example": {
                            "principal": {
                              "address": "",
                              "email": "",
                              "mobile": "",
                              "nature_of_business": ""
                            },
                            "additional": [
                              []
                            ]
                          },
                          "properties": {
                            "principal": {
                              "type": "object",
                              "description": "",
                              "example": {
                                "address": "",
                                "email": "",
                                "mobile": "",
                                "nature_of_business": ""
                              },
                              "properties": {
                                "address": {
                                  "type": "string",
                                  "description": "",
                                  "example": ""
                                },
                                "email": {
                                  "type": "string",
                                  "description": "",
                                  "example": ""
                                },
                                "mobile": {
                                  "type": "string",
                                  "description": "",
                                  "example": ""
                                },
                                "nature_of_business": {
                                  "type": "string",
                                  "description": "",
                                  "example": ""
                                }
                              }
                            },
                            "additional": {
                              "type": "array",
                              "description": "",
                              "example": [
                                []
                              ],
                              "items": {
                                "type": "object",
                                "properties": {}
                              }
                            }
                          }
                        },
                        "promoters": {
                          "type": "array",
                          "description": "",
                          "example": [
                            []
                          ],
                          "items": {
                            "type": "object",
                            "properties": {}
                          }
                        },
                        "annual_turnover": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "annual_turnover_fy": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "percentage_in_cash_fy": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "percentage_in_cash": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "aadhaar_validation": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "aadhaar_validation_date": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "address_details": {
                          "type": "object",
                          "description": "",
                          "example": {},
                          "properties": {}
                        },
                        "gstin": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "pan_number": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "business_name": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "legal_name": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "center_jurisdiction": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "state_jurisdiction": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "date_of_registration": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "constitution_of_business": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "taxpayer_type": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "gstin_status": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "date_of_cancellation": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "field_visit_conducted": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "nature_bus_activities": {
                          "type": "array",
                          "description": "",
                          "example": [
                            []
                          ],
                          "items": {
                            "type": "object",
                            "properties": {}
                          }
                        },
                        "nature_of_core_business_activity_code": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "nature_of_core_business_activity_description": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "filing_status": {
                          "type": "array",
                          "description": "",
                          "example": [
                            []
                          ],
                          "items": {
                            "type": "object",
                            "properties": {}
                          }
                        },
                        "address": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "hsn_info": {
                          "type": "object",
                          "description": "",
                          "example": {},
                          "properties": {}
                        },
                        "filing_frequency": {
                          "type": "array",
                          "description": "",
                          "example": [
                            []
                          ],
                          "items": {
                            "type": "object",
                            "properties": {}
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "code",
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "message": {
                      "type": "string",
                      "description": "",
                      "example": "Invalid GSTIN pattern"
                    },
                    "timestamp": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "transaction_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    }
                  },
                  "required": [
                    "code",
                    "timestamp",
                    "transaction_id"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/verification/gstin/gstin-by-pan": {
      "get": {
        "tags": [
          "GST APIs"
        ],
        "summary": "Search Taxpayer By Pan",
        "description": "- The Search GSTIN API by PAN takes in the pan of a business entity and provides you with the information of all the business entities that are associated with that corresponding pan.    \n- The Search GSTIN API responds with the information of a particular GST entity associated with the GSTIN. However, Search GSTIN by PAN provides you with the details of all the entities that are associated with the pan.     ",
        "operationId": "GST APIs_search-taxpayer-by-pan",
        "parameters": [
          {
            "name": "pan_number",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "timestamp": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "transaction_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "message": {
                      "type": "string",
                      "description": "",
                      "example": "Invalid Pan pattern"
                    }
                  },
                  "required": [
                    "code",
                    "timestamp",
                    "transaction_id"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/verification/gstin/track-gstr": {
      "get": {
        "tags": [
          "GST APIs"
        ],
        "summary": "Track Gst Return Status",
        "description": "- Track GST Return API accepts gstin and year (Financial year). This API then responds with the status of all the GSTRs filed by the given GSTIN and financial year.   \n- Tracking GSTRs gives an idea about the GST entity's compliance performance. A GST entity periodically and rightly filing GSTRs is a positive indication about its business and compliance performance.    ",
        "operationId": "GST APIs_track-gst-return-status",
        "parameters": [
          {
            "name": "gstin_number",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          },
          {
            "name": "financial_year",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "message": {
                      "type": "string",
                      "description": "",
                      "example": "Invalid GSTIN pattern"
                    },
                    "timestamp": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "transaction_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    }
                  },
                  "required": [
                    "code",
                    "timestamp",
                    "transaction_id"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/gst/tax-payer/generate-otp": {
      "post": {
        "tags": [
          "GST Taxpayer APIs"
        ],
        "summary": "Generate Otp",
        "description": "First the taxpayer has to allow access to the GST Portal and enable it on his own GST Portal Account.   \n\nFollow the following steps to do the same:   \n    Step 1️⃣ : Login to your GST Account on https://gst.gov.in   \n    Step 2️⃣ : Click '*View Profile*' on Dashboard   \n    Step 3️⃣ : In the '*Quick Links*' section, go to *Manage API Access*     \n    Step 4️⃣ : Set '*Enable API Access Request*' to *Yes*   \n    Step 5️⃣ : Set '*Duration*' to *30days*   \n\n- Once the taxpayer has enabled API access onto GST Portal, the OTP verification can be carried out.   \n- First, Generate One Time Password API is called.   \n- This API takes in the gstin & username as per GST Portal. And then sends OTP to the phone number and email id of the GST Taxpayer.    \n\nOTP Message is as follows:   \n    \n    **OTP Message Sent to the Taxpayer**   \n    \n    Dear taxpayer,   \n    {{OTP}} is the OTP to verify your GST registration: {{GSTIN}}.   \n    OTP is valid till {{hh:mm:ss IST}}. Do not share OTP with anyone.   \n\n- OTP sent will be valid for 10 minutes.    ",
        "operationId": "GST Taxpayer APIs_generate-otp-1",
        "parameters": [
          {
            "name": "gstin_number",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          },
          {
            "name": "user_name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "",
                      "example": 200
                    },
                    "timestamp": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "transaction_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "data": {
                      "type": "object",
                      "description": "",
                      "example": {},
                      "properties": {}
                    }
                  },
                  "required": [
                    "timestamp",
                    "transaction_id"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "array",
                      "description": "",
                      "example": [
                        [
                          [
                            []
                          ],
                          "",
                          ""
                        ]
                      ],
                      "items": {
                        "type": "object",
                        "properties": {
                          "loc": {
                            "type": "array",
                            "description": "",
                            "example": [
                              []
                            ],
                            "items": {
                              "type": "object",
                              "properties": {}
                            }
                          },
                          "msg": {
                            "type": "string",
                            "description": "",
                            "example": ""
                          },
                          "type": {
                            "type": "string",
                            "description": "",
                            "example": ""
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        }
      }
    },
    "/v1/gst/tax-payer/verify-otp": {
      "post": {
        "tags": [
          "GST Taxpayer APIs"
        ],
        "summary": "Verify Otp",
        "description": "- Once the last two steps are successfully completed. That is - the user has enabled API access on his GST Portal and GenerateOtp API an OTP has been sent. Then, this API is used to verify the OTP and enable access to GST Portal.\n- This API will start a session and provide access valid for 6 hrs. Returns date timestamp of the expiry of the session.\n- The end result of Tax Payer authentication process is to establish an authorization token for the session which needs to be included in the header for all subsequent API calls.",
        "operationId": "GST Taxpayer APIs_verify-otp-1",
        "parameters": [
          {
            "name": "gstin_number",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          },
          {
            "name": "user_name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          },
          {
            "name": "otp",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "",
                      "example": 200
                    },
                    "timestamp": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "transaction_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "data": {
                      "type": "object",
                      "description": "",
                      "example": {},
                      "properties": {}
                    }
                  },
                  "required": [
                    "timestamp",
                    "transaction_id"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "array",
                      "description": "",
                      "example": [
                        [
                          [
                            []
                          ],
                          "",
                          ""
                        ]
                      ],
                      "items": {
                        "type": "object",
                        "properties": {
                          "loc": {
                            "type": "array",
                            "description": "",
                            "example": [
                              []
                            ],
                            "items": {
                              "type": "object",
                              "properties": {}
                            }
                          },
                          "msg": {
                            "type": "string",
                            "description": "",
                            "example": ""
                          },
                          "type": {
                            "type": "string",
                            "description": "",
                            "example": ""
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        }
      }
    },
    "/v1/gst/tax-payer/session": {
      "get": {
        "tags": [
          "GST Taxpayer APIs"
        ],
        "summary": "Session Expiry",
        "description": "- Once authenticated, the GST Taxpayer APIs enable a session of 6 hours.    \n- Use Session Expiry API to find the time when the session expires for the particular gstin.   ",
        "operationId": "GST Taxpayer APIs_session-expiry",
        "parameters": [
          {
            "name": "gstin_number",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "description": "",
                      "example": {
                        "token_expiry": 0,
                        "session_expiry": 0
                      },
                      "properties": {
                        "token_expiry": {
                          "type": "integer",
                          "description": "",
                          "example": 0
                        },
                        "session_expiry": {
                          "type": "integer",
                          "description": "",
                          "example": 0
                        }
                      }
                    },
                    "code": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "timestamp": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "transaction_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    }
                  },
                  "required": [
                    "data",
                    "code",
                    "timestamp",
                    "transaction_id"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "array",
                      "description": "",
                      "example": [
                        [
                          [
                            []
                          ],
                          "",
                          ""
                        ]
                      ],
                      "items": {
                        "type": "object",
                        "properties": {
                          "loc": {
                            "type": "array",
                            "description": "",
                            "example": [
                              []
                            ],
                            "items": {
                              "type": "object",
                              "properties": {}
                            }
                          },
                          "msg": {
                            "type": "string",
                            "description": "",
                            "example": ""
                          },
                          "type": {
                            "type": "string",
                            "description": "",
                            "example": ""
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        }
      }
    },
    "/v1/gst/tax-payer/refresh-session": {
      "post": {
        "tags": [
          "GST Taxpayer APIs"
        ],
        "summary": "Refresh Taxpayer Access",
        "description": "- Once authenticated, the GST Taxpayer APIs enable a session of 6 hours.   \n- Use Refresh Taxpayer API before the end of 6 hours to refresh the Taxpayer Access for more time.   ",
        "operationId": "GST Taxpayer APIs_refresh-taxpayer-access",
        "parameters": [
          {
            "name": "gstin_number",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "array",
                      "description": "",
                      "example": [
                        [
                          [
                            []
                          ],
                          "",
                          ""
                        ]
                      ],
                      "items": {
                        "type": "object",
                        "properties": {
                          "loc": {
                            "type": "array",
                            "description": "",
                            "example": [
                              []
                            ],
                            "items": {
                              "type": "object",
                              "properties": {}
                            }
                          },
                          "msg": {
                            "type": "string",
                            "description": "",
                            "example": ""
                          },
                          "type": {
                            "type": "string",
                            "description": "",
                            "example": ""
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        }
      }
    },
    "/v1/gst/tax-payer/ledgers/balance": {
      "get": {
        "tags": [
          "GST Taxpayer APIs"
        ],
        "summary": "Cash Itc Balance",
        "description": "- The Cash ITC Balance is the balance present after deduction of Input Tax Credit (ITC) has to be paid.   \n- The API takes in the gstin and the time period(month and year) for which you want to retrieve the Cash ITC Balance.   ",
        "operationId": "GST Taxpayer APIs_cash-itc-balance",
        "parameters": [
          {
            "name": "gstin_number",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          },
          {
            "name": "year",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          },
          {
            "name": "month",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "array",
                      "description": "",
                      "example": [
                        [
                          [
                            []
                          ],
                          "",
                          ""
                        ]
                      ],
                      "items": {
                        "type": "object",
                        "properties": {
                          "loc": {
                            "type": "array",
                            "description": "",
                            "example": [
                              []
                            ],
                            "items": {
                              "type": "object",
                              "properties": {}
                            }
                          },
                          "msg": {
                            "type": "string",
                            "description": "",
                            "example": ""
                          },
                          "type": {
                            "type": "string",
                            "description": "",
                            "example": ""
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        }
      }
    },
    "/v1/gst/tax-payer/ledgers/cash": {
      "get": {
        "tags": [
          "GST Taxpayer APIs"
        ],
        "summary": "Cash Ledger",
        "description": "- The E-Cash or Electronic Cash Ledger under GST displays all the amounts deposited for payment of tax, interest, fee, or penalty. It also reflects TDS (Tax Deducted at Source) and TCS (Tax Collected at Source) since they are tax deposits of the taxpayer.    \n- The API takes in the gstin and the time period(from and to) for which you want to retrieve the Cash Ledger.    ",
        "operationId": "GST Taxpayer APIs_cash-ledger",
        "parameters": [
          {
            "name": "gstin_number",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          },
          {
            "name": "from_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          },
          {
            "name": "to_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "array",
                      "description": "",
                      "example": [
                        [
                          [
                            []
                          ],
                          "",
                          ""
                        ]
                      ],
                      "items": {
                        "type": "object",
                        "properties": {
                          "loc": {
                            "type": "array",
                            "description": "",
                            "example": [
                              []
                            ],
                            "items": {
                              "type": "object",
                              "properties": {}
                            }
                          },
                          "msg": {
                            "type": "string",
                            "description": "",
                            "example": ""
                          },
                          "type": {
                            "type": "string",
                            "description": "",
                            "example": ""
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        }
      }
    },
    "/v1/gst/tax-payer/ledgers/itc": {
      "get": {
        "tags": [
          "GST Taxpayer APIs"
        ],
        "summary": "Itc Ledger",
        "description": "Retrieves ITC ledger.",
        "operationId": "GST Taxpayer APIs_itc-ledger",
        "parameters": [
          {
            "name": "gstin_number",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          },
          {
            "name": "from_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          },
          {
            "name": "to_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "array",
                      "description": "",
                      "example": [
                        [
                          [
                            []
                          ],
                          "",
                          ""
                        ]
                      ],
                      "items": {
                        "type": "object",
                        "properties": {
                          "loc": {
                            "type": "array",
                            "description": "",
                            "example": [
                              []
                            ],
                            "items": {
                              "type": "object",
                              "properties": {}
                            }
                          },
                          "msg": {
                            "type": "string",
                            "description": "",
                            "example": ""
                          },
                          "type": {
                            "type": "string",
                            "description": "",
                            "example": ""
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        }
      }
    },
    "/v1/gst/returns/summary/gstr-1": {
      "get": {
        "tags": [
          "GST Taxpayer APIs"
        ],
        "summary": "Gstr 1 Summary",
        "description": "Get a table-wise summary of GSTR-1 data for the authenticated taxpayer (gstin) for a particular year and month. ",
        "operationId": "GST Taxpayer APIs_gstr-1-summary",
        "parameters": [
          {
            "name": "gstin_number",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          },
          {
            "name": "year",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          },
          {
            "name": "month",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "array",
                      "description": "",
                      "example": [
                        [
                          [
                            []
                          ],
                          "",
                          ""
                        ]
                      ],
                      "items": {
                        "type": "object",
                        "properties": {
                          "loc": {
                            "type": "array",
                            "description": "",
                            "example": [
                              []
                            ],
                            "items": {
                              "type": "object",
                              "properties": {}
                            }
                          },
                          "msg": {
                            "type": "string",
                            "description": "",
                            "example": ""
                          },
                          "type": {
                            "type": "string",
                            "description": "",
                            "example": ""
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        }
      }
    },
    "/v1/gst/returns/summary/gstr-3b": {
      "get": {
        "tags": [
          "GST Taxpayer APIs"
        ],
        "summary": "Gstr 3B Summary",
        "description": "Get a summary in GSTR-3B for a return period (year and month) for the authenticated taxpayer (gstin).",
        "operationId": "GST Taxpayer APIs_gstr-3b-summary",
        "parameters": [
          {
            "name": "gstin_number",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          },
          {
            "name": "year",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          },
          {
            "name": "month",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "array",
                      "description": "",
                      "example": [
                        [
                          [
                            []
                          ],
                          "",
                          ""
                        ]
                      ],
                      "items": {
                        "type": "object",
                        "properties": {
                          "loc": {
                            "type": "array",
                            "description": "",
                            "example": [
                              []
                            ],
                            "items": {
                              "type": "object",
                              "properties": {}
                            }
                          },
                          "msg": {
                            "type": "string",
                            "description": "",
                            "example": ""
                          },
                          "type": {
                            "type": "string",
                            "description": "",
                            "example": ""
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        }
      }
    },
    "/v1/verification/udyogaadhaar/captcha": {
      "get": {
        "tags": [
          "MSME APIs"
        ],
        "summary": "Initiate Udyog Session",
        "description": "First, a captcha has to be generated to start a fresh session with the MSME-Udyog-Aadhaar portal.   \nThis API Endpoint returns a base64 encoded captcha and a corresponding session id back.",
        "operationId": "MSME APIs_initiate-udyog-session",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "transaction_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "data": {
                      "type": "object",
                      "description": "",
                      "example": {
                        "session_id": "",
                        "captcha": ""
                      },
                      "properties": {
                        "session_id": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "captcha": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        }
                      }
                    }
                  },
                  "required": [
                    "timestamp",
                    "transaction_id",
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "transaction_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "message": {
                      "type": "string",
                      "description": "",
                      "example": "Source Unavailable"
                    }
                  },
                  "required": [
                    "timestamp",
                    "transaction_id"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/verification/udyogaadhaar/reload-captcha": {
      "get": {
        "tags": [
          "MSME APIs"
        ],
        "summary": "Reload Udyog Aadhaar Captcha",
        "description": ".   \nThis API Endpoint returns a fresh base64 encoded captcha for the given session id.",
        "operationId": "MSME APIs_reload-udyog-aadhaar-captcha",
        "parameters": [
          {
            "name": "session_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "transaction_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "data": {
                      "type": "object",
                      "description": "",
                      "example": {
                        "session_id": "",
                        "captcha": ""
                      },
                      "properties": {
                        "session_id": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "captcha": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        }
                      }
                    }
                  },
                  "required": [
                    "timestamp",
                    "transaction_id",
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "array",
                      "description": "",
                      "example": [
                        [
                          [
                            []
                          ],
                          "",
                          ""
                        ]
                      ],
                      "items": {
                        "type": "object",
                        "properties": {
                          "loc": {
                            "type": "array",
                            "description": "",
                            "example": [
                              []
                            ],
                            "items": {
                              "type": "object",
                              "properties": {}
                            }
                          },
                          "msg": {
                            "type": "string",
                            "description": "",
                            "example": ""
                          },
                          "type": {
                            "type": "string",
                            "description": "",
                            "example": ""
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "transaction_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "message": {
                      "type": "string",
                      "description": "",
                      "example": "Source Unavailable"
                    }
                  },
                  "required": [
                    "timestamp",
                    "transaction_id"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/verification/udyogaadhaar/verify": {
      "post": {
        "tags": [
          "MSME APIs"
        ],
        "summary": "Verify Udyog Aadhaar Details",
        "description": "With this API Endpoint, the captcha and session id generated in the previous step can be passed as valid parameters alongside the Udyog Aadhaar Number to verify a particular Udyog Aadhaar Number and fetch its details.   \nBase64 decoded value of the captcha should be passed for a valid and successful request.",
        "operationId": "MSME APIs_verify-udyog-aadhaar-details",
        "parameters": [
          {
            "name": "udyog_aadhaar_number",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          },
          {
            "name": "captcha",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          },
          {
            "name": "session_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "description": "",
                      "example": {
                        "enterprise_name": "",
                        "enterprise_type": "",
                        "major_activity": "",
                        "social_category": "",
                        "dic_name": "",
                        "state": "",
                        "commencement_date": "",
                        "applied_date": "",
                        "modified_date": "",
                        "mobile": "",
                        "email": "",
                        "plant_location_details": [
                          [
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            ""
                          ]
                        ],
                        "nic_codes_details": [
                          [
                            "",
                            "",
                            "",
                            "",
                            ""
                          ]
                        ]
                      },
                      "properties": {
                        "enterprise_name": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "enterprise_type": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "major_activity": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "social_category": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "dic_name": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "state": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "commencement_date": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "applied_date": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "modified_date": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "mobile": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "email": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "plant_location_details": {
                          "type": "array",
                          "description": "",
                          "example": [
                            [
                              "",
                              "",
                              "",
                              "",
                              "",
                              "",
                              "",
                              "",
                              ""
                            ]
                          ],
                          "items": {
                            "type": "object",
                            "properties": {
                              "flat_door_block_number": {
                                "type": "string",
                                "description": "",
                                "example": ""
                              },
                              "name_of_premise_building_village": {
                                "type": "string",
                                "description": "",
                                "example": ""
                              },
                              "road_street_lane": {
                                "type": "string",
                                "description": "",
                                "example": ""
                              },
                              "village_or_town": {
                                "type": "string",
                                "description": "",
                                "example": ""
                              },
                              "area_locality": {
                                "type": "string",
                                "description": "",
                                "example": ""
                              },
                              "city": {
                                "type": "string",
                                "description": "",
                                "example": ""
                              },
                              "pin": {
                                "type": "string",
                                "description": "",
                                "example": ""
                              },
                              "state": {
                                "type": "string",
                                "description": "",
                                "example": ""
                              },
                              "district": {
                                "type": "string",
                                "description": "",
                                "example": ""
                              }
                            }
                          }
                        },
                        "nic_codes_details": {
                          "type": "array",
                          "description": "",
                          "example": [
                            [
                              "",
                              "",
                              "",
                              "",
                              ""
                            ]
                          ],
                          "items": {
                            "type": "object",
                            "properties": {
                              "nic_2_digit_code": {
                                "type": "string",
                                "description": "",
                                "example": ""
                              },
                              "nic_4_digit_code": {
                                "type": "string",
                                "description": "",
                                "example": ""
                              },
                              "nic_5_digit_code": {
                                "type": "string",
                                "description": "",
                                "example": ""
                              },
                              "activity_type": {
                                "type": "string",
                                "description": "",
                                "example": ""
                              },
                              "added_on": {
                                "type": "string",
                                "description": "",
                                "example": ""
                              }
                            }
                          }
                        }
                      }
                    },
                    "timestamp": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "transaction_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    }
                  },
                  "required": [
                    "data",
                    "timestamp",
                    "transaction_id"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "transaction_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "message": {
                      "type": "string",
                      "description": "",
                      "example": "Source Unavailable"
                    }
                  },
                  "required": [
                    "timestamp",
                    "transaction_id"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        }
      }
    },
    "/v1/verification/udyamaadhaar/captcha": {
      "get": {
        "tags": [
          "MSME APIs"
        ],
        "summary": "Initiate Udyam Session",
        "description": "First, a captcha has to be generated to start a fresh session with the MSME-Udyam-Aadhaar portal.   \nThis API Endpoint returns a base64 encoded captcha and a corresponding session id back.",
        "operationId": "MSME APIs_initiate-udyam-session",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "transaction_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "data": {
                      "type": "object",
                      "description": "",
                      "example": {
                        "session_id": "",
                        "captcha": ""
                      },
                      "properties": {
                        "session_id": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "captcha": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        }
                      }
                    }
                  },
                  "required": [
                    "timestamp",
                    "transaction_id",
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "transaction_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "message": {
                      "type": "string",
                      "description": "",
                      "example": "Source Unavailable"
                    }
                  },
                  "required": [
                    "timestamp",
                    "transaction_id"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/verification/udyamaadhaar/reload-captcha": {
      "get": {
        "tags": [
          "MSME APIs"
        ],
        "summary": "Reload Udyam Aadhaar Captcha",
        "description": "This API Endpoint returns a fresh base64 encoded captcha for the given session id.",
        "operationId": "MSME APIs_reload-udyam-aadhaar-captcha",
        "parameters": [
          {
            "name": "session_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "transaction_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "data": {
                      "type": "object",
                      "description": "",
                      "example": {
                        "session_id": "",
                        "captcha": ""
                      },
                      "properties": {
                        "session_id": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "captcha": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        }
                      }
                    }
                  },
                  "required": [
                    "timestamp",
                    "transaction_id",
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "array",
                      "description": "",
                      "example": [
                        [
                          [
                            []
                          ],
                          "",
                          ""
                        ]
                      ],
                      "items": {
                        "type": "object",
                        "properties": {
                          "loc": {
                            "type": "array",
                            "description": "",
                            "example": [
                              []
                            ],
                            "items": {
                              "type": "object",
                              "properties": {}
                            }
                          },
                          "msg": {
                            "type": "string",
                            "description": "",
                            "example": ""
                          },
                          "type": {
                            "type": "string",
                            "description": "",
                            "example": ""
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "transaction_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "message": {
                      "type": "string",
                      "description": "",
                      "example": "Source Unavailable"
                    }
                  },
                  "required": [
                    "timestamp",
                    "transaction_id"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/v1/verification/udyamaadhaar/verify": {
      "post": {
        "tags": [
          "MSME APIs"
        ],
        "summary": "Verify Udyam Aadhaar Details",
        "description": "With this API Endpoint, the captcha and session id generated in the previous step can be passed as valid parameters alongside the Udyam Aadhaar Number to verify a particular Udyam Aadhaar Number and fetch its details.   \nBase64 decoded value of the captcha should be passed for a valid and successful request.",
        "operationId": "MSME APIs_verify-udyam-aadhaar-details",
        "parameters": [
          {
            "name": "udyam_aadhaar_number",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          },
          {
            "name": "captcha",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          },
          {
            "name": "session_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "description": "",
                      "example": {
                        "enterprise_name": "",
                        "enterprise_type": "",
                        "major_activity": "",
                        "social_category": "",
                        "organization_type": "",
                        "dic_name": "",
                        "msme_dfo": "",
                        "incorporation_date": "",
                        "commencement_date": "",
                        "udyam_registration_date": "",
                        "enterprise_official_address": {
                          "flat_door_block_number": "",
                          "name_of_premise_building": "",
                          "village": "",
                          "block": "",
                          "road": "",
                          "city": "",
                          "state": "",
                          "district": ""
                        },
                        "mobile": "",
                        "email": "",
                        "plant_location_details": [
                          [
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            "",
                            ""
                          ]
                        ],
                        "nic_codes_details": [
                          [
                            "",
                            "",
                            "",
                            "",
                            ""
                          ]
                        ]
                      },
                      "properties": {
                        "enterprise_name": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "enterprise_type": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "major_activity": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "social_category": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "organization_type": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "dic_name": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "msme_dfo": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "incorporation_date": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "commencement_date": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "udyam_registration_date": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "enterprise_official_address": {
                          "type": "object",
                          "description": "",
                          "example": {
                            "flat_door_block_number": "",
                            "name_of_premise_building": "",
                            "village": "",
                            "block": "",
                            "road": "",
                            "city": "",
                            "state": "",
                            "district": ""
                          },
                          "properties": {
                            "flat_door_block_number": {
                              "type": "string",
                              "description": "",
                              "example": ""
                            },
                            "name_of_premise_building": {
                              "type": "string",
                              "description": "",
                              "example": ""
                            },
                            "village": {
                              "type": "string",
                              "description": "",
                              "example": ""
                            },
                            "block": {
                              "type": "string",
                              "description": "",
                              "example": ""
                            },
                            "road": {
                              "type": "string",
                              "description": "",
                              "example": ""
                            },
                            "city": {
                              "type": "string",
                              "description": "",
                              "example": ""
                            },
                            "state": {
                              "type": "string",
                              "description": "",
                              "example": ""
                            },
                            "district": {
                              "type": "string",
                              "description": "",
                              "example": ""
                            }
                          }
                        },
                        "mobile": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "email": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "plant_location_details": {
                          "type": "array",
                          "description": "",
                          "example": [
                            [
                              "",
                              "",
                              "",
                              "",
                              "",
                              "",
                              "",
                              "",
                              "",
                              ""
                            ]
                          ],
                          "items": {
                            "type": "object",
                            "properties": {
                              "unit_name": {
                                "type": "string",
                                "description": "",
                                "example": ""
                              },
                              "flat": {
                                "type": "string",
                                "description": "",
                                "example": ""
                              },
                              "building": {
                                "type": "string",
                                "description": "",
                                "example": ""
                              },
                              "village_or_town": {
                                "type": "string",
                                "description": "",
                                "example": ""
                              },
                              "block": {
                                "type": "string",
                                "description": "",
                                "example": ""
                              },
                              "road": {
                                "type": "string",
                                "description": "",
                                "example": ""
                              },
                              "city": {
                                "type": "string",
                                "description": "",
                                "example": ""
                              },
                              "pin": {
                                "type": "string",
                                "description": "",
                                "example": ""
                              },
                              "state": {
                                "type": "string",
                                "description": "",
                                "example": ""
                              },
                              "district": {
                                "type": "string",
                                "description": "",
                                "example": ""
                              }
                            }
                          }
                        },
                        "nic_codes_details": {
                          "type": "array",
                          "description": "",
                          "example": [
                            [
                              "",
                              "",
                              "",
                              "",
                              ""
                            ]
                          ],
                          "items": {
                            "type": "object",
                            "properties": {
                              "nic_2_digit_code": {
                                "type": "string",
                                "description": "",
                                "example": ""
                              },
                              "nic_4_digit_code": {
                                "type": "string",
                                "description": "",
                                "example": ""
                              },
                              "nic_5_digit_code": {
                                "type": "string",
                                "description": "",
                                "example": ""
                              },
                              "activity_type": {
                                "type": "string",
                                "description": "",
                                "example": ""
                              },
                              "added_on": {
                                "type": "string",
                                "description": "",
                                "example": ""
                              }
                            }
                          }
                        }
                      }
                    },
                    "timestamp": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "transaction_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    }
                  },
                  "required": [
                    "data",
                    "timestamp",
                    "transaction_id"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "timestamp": {
                      "type": "integer",
                      "description": "",
                      "example": 0
                    },
                    "transaction_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "message": {
                      "type": "string",
                      "description": "",
                      "example": "Source Unavailable"
                    }
                  },
                  "required": [
                    "timestamp",
                    "transaction_id"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        }
      }
    },
    "/v1/documents/extraction/ind_pancard": {
      "post": {
        "tags": [
          "Document OCR"
        ],
        "summary": "Ind Pan Ocr",
        "description": "PAN Card OCR API lets you extract relevant fields like *pan_number*, *name*, and *dob* from the image of a PAN Card document in the form of key-value pairs.    \n\nBase64 encoded string of the document needs to be passed in request payload.",
        "operationId": "Document OCR_ind-pan-ocr",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "description": "",
                      "example": {
                        "age": 0,
                        "date_of_birth": "",
                        "date_of_issue": "",
                        "fathers_name": "",
                        "id_number": "",
                        "is_scanned": false,
                        "minor": false,
                        "name_on_card": "",
                        "pan_type": ""
                      },
                      "properties": {
                        "age": {
                          "type": "integer",
                          "description": "",
                          "example": 0
                        },
                        "date_of_birth": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "date_of_issue": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "fathers_name": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "id_number": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "is_scanned": {
                          "type": "boolean",
                          "description": "",
                          "example": false
                        },
                        "minor": {
                          "type": "boolean",
                          "description": "",
                          "example": false
                        },
                        "name_on_card": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "pan_type": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "description": "",
                      "example": "Document processed successfuly"
                    },
                    "transaction_id": {
                      "type": "string",
                      "description": "",
                      "example": "string"
                    },
                    "code": {
                      "type": "integer",
                      "description": "",
                      "example": 200
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "transaction_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "code": {
                      "type": "integer",
                      "description": "",
                      "example": 422
                    },
                    "message": {
                      "type": "string",
                      "description": "",
                      "example": "Empty document. Valid base64 required."
                    }
                  },
                  "required": [
                    "transaction_id"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "document1": {
                    "type": "string",
                    "description": "",
                    "example": ""
                  },
                  "document2": {
                    "type": "string",
                    "description": "",
                    "example": ""
                  },
                  "name": {
                    "type": "string",
                    "description": "",
                    "example": ""
                  }
                },
                "required": [
                  "document1"
                ]
              }
            }
          }
        }
      }
    },
    "/v1/documents/extraction/ind_aadhaar": {
      "post": {
        "tags": [
          "Document OCR"
        ],
        "summary": "Ind Aadhaar Ocr",
        "description": "With the help of Aadhaar Card OCR API you can extract relevant fields like *aadhaar_number*, *name*, *dob*, *address* from the image of an Aadhaar Card document in the form of key-value pairs.   \n\nBase64 encoded string of the document needs to be passed in request payload. ",
        "operationId": "Document OCR_ind-aadhaar-ocr",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "description": "",
                      "example": {
                        "address": "",
                        "date_of_birth": "",
                        "district": "",
                        "fathers_name": "",
                        "gender": "",
                        "house_number": "",
                        "id_number": "",
                        "is_scanned": false,
                        "name_on_card": "",
                        "pincode": "",
                        "state": "",
                        "street_address": "",
                        "year_of_birth": ""
                      },
                      "properties": {
                        "address": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "date_of_birth": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "district": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "fathers_name": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "gender": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "house_number": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "id_number": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "is_scanned": {
                          "type": "boolean",
                          "description": "",
                          "example": false
                        },
                        "name_on_card": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "pincode": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "state": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "street_address": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "year_of_birth": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "description": "",
                      "example": "Document processed successfuly"
                    },
                    "transaction_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "code": {
                      "type": "integer",
                      "description": "",
                      "example": 200
                    }
                  },
                  "required": [
                    "data",
                    "transaction_id"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "transaction_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "code": {
                      "type": "integer",
                      "description": "",
                      "example": 422
                    },
                    "message": {
                      "type": "string",
                      "description": "",
                      "example": "Empty document. Valid base64 required."
                    }
                  },
                  "required": [
                    "transaction_id"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "document1": {
                    "type": "string",
                    "description": "",
                    "example": ""
                  },
                  "document2": {
                    "type": "string",
                    "description": "",
                    "example": ""
                  },
                  "name": {
                    "type": "string",
                    "description": "",
                    "example": ""
                  }
                },
                "required": [
                  "document1"
                ]
              }
            }
          }
        }
      }
    },
    "/v1/documents/extraction/ind_voter_id": {
      "post": {
        "tags": [
          "Document OCR"
        ],
        "summary": "Ind Voter Id Ocr",
        "description": "Voter Card OCR API lets you extract voter fields like *voter_id*, *name*, *father name*, *dob*, and *address* etc. from the image of a Voter Card document in the form of key-value pairs.   \n\nBase64 encoded string of the document needs to be passed in request payload. ",
        "operationId": "Document OCR_ind-voter-id-ocr",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "description": "",
                      "example": {
                        "address": "",
                        "age": "",
                        "date_of_birth": "",
                        "district": "",
                        "fathers_name": "",
                        "gender": "",
                        "house_number": "",
                        "id_number": "",
                        "is_scanned": "",
                        "name_on_card": "",
                        "pincode": "",
                        "state": "",
                        "street_address": "",
                        "year_of_birth": ""
                      },
                      "properties": {
                        "address": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "age": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "date_of_birth": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "district": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "fathers_name": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "gender": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "house_number": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "id_number": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "is_scanned": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "name_on_card": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "pincode": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "state": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "street_address": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "year_of_birth": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "description": "",
                      "example": "Document processed successfuly"
                    },
                    "transaction_id": {
                      "type": "string",
                      "description": "",
                      "example": "25859290-2a81-4327-b269-484fb17e76b9"
                    },
                    "code": {
                      "type": "string",
                      "description": "",
                      "example": "200"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "transaction_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "code": {
                      "type": "integer",
                      "description": "",
                      "example": 422
                    },
                    "message": {
                      "type": "string",
                      "description": "",
                      "example": "Empty document. Valid base64 required."
                    }
                  },
                  "required": [
                    "transaction_id"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "document1": {
                    "type": "string",
                    "description": "",
                    "example": ""
                  },
                  "document2": {
                    "type": "string",
                    "description": "",
                    "example": ""
                  },
                  "name": {
                    "type": "string",
                    "description": "",
                    "example": ""
                  }
                },
                "required": [
                  "document1"
                ]
              }
            }
          }
        }
      }
    },
    "/v1/documents/extraction/ind_driving_license": {
      "post": {
        "tags": [
          "Document OCR"
        ],
        "summary": "Ind Driving License Ocr",
        "description": "Driving License OCR API lets you extract relevant fields like *dl_number*, *name*, *validity*, *dob*, and address etc. from the image of a DL document in the form of key-value pairs.    \n\nBase64 encoded string of the document needs to be passed in request payload. ",
        "operationId": "Document OCR_ind-driving-license-ocr",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "description": "",
                      "example": {
                        "address": "",
                        "date_of_birth": "",
                        "date_of_validity": "",
                        "district": "",
                        "fathers_name": "",
                        "id_number": "",
                        "is_scanned": "",
                        "issue_dates": {},
                        "name_on_card": "",
                        "pincode": "",
                        "state": "",
                        "street_address": "",
                        "type": [
                          []
                        ],
                        "validity": {}
                      },
                      "properties": {
                        "address": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "date_of_birth": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "date_of_validity": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "district": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "fathers_name": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "id_number": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "is_scanned": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "issue_dates": {
                          "type": "object",
                          "description": "",
                          "example": {},
                          "properties": {}
                        },
                        "name_on_card": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "pincode": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "state": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "street_address": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "type": {
                          "type": "array",
                          "description": "",
                          "example": [
                            []
                          ],
                          "items": {
                            "type": "object",
                            "properties": {}
                          }
                        },
                        "validity": {
                          "type": "object",
                          "description": "",
                          "example": {},
                          "properties": {}
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "description": "",
                      "example": "Document processed successfuly"
                    },
                    "transaction_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "code": {
                      "type": "string",
                      "description": "",
                      "example": "200"
                    }
                  },
                  "required": [
                    "data",
                    "transaction_id"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "transaction_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "code": {
                      "type": "integer",
                      "description": "",
                      "example": 422
                    },
                    "message": {
                      "type": "string",
                      "description": "",
                      "example": "Empty document. Valid base64 required."
                    }
                  },
                  "required": [
                    "transaction_id"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "document1": {
                    "type": "string",
                    "description": "",
                    "example": ""
                  },
                  "document2": {
                    "type": "string",
                    "description": "",
                    "example": ""
                  },
                  "name": {
                    "type": "string",
                    "description": "",
                    "example": ""
                  }
                },
                "required": [
                  "document1"
                ]
              }
            }
          }
        }
      }
    },
    "/v1/documents/extraction/ind_bank_cheque": {
      "post": {
        "tags": [
          "Document OCR"
        ],
        "summary": "Ind Bank Cheque Ocr",
        "description": "Manually typing in or verifying bank details like the account number, IFSC and account holder name is slow and cumbersome.    \nDeepvue.tech’s Bank Cheque OCR API lets you do it in a blink of an eye and enables your Operations with instant Bank Cheque OCR.   \n\nWith Bank Cheque OCR API, you can digitize an image of a bank cheque in no time.    \n\nBase64 encoded string of the document needs to be passed in request payload.",
        "operationId": "Document OCR_ind-bank-cheque-ocr",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "description": "",
                      "example": {
                        "account_name": "",
                        "account_no": "",
                        "bank_address": "",
                        "bank_name": "",
                        "date_of_issue": "",
                        "ifsc_code": "",
                        "is_scanned": false,
                        "micr_cheque_number": "",
                        "micr_code": ""
                      },
                      "properties": {
                        "account_name": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "account_no": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "bank_address": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "bank_name": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "date_of_issue": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "ifsc_code": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "is_scanned": {
                          "type": "boolean",
                          "description": "",
                          "example": false
                        },
                        "micr_cheque_number": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        },
                        "micr_code": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        }
                      }
                    },
                    "message": {
                      "type": "string",
                      "description": "",
                      "example": "Document processed successfuly"
                    },
                    "transaction_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "code": {
                      "type": "string",
                      "description": "",
                      "example": "200"
                    }
                  },
                  "required": [
                    "data",
                    "transaction_id"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "transaction_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "code": {
                      "type": "integer",
                      "description": "",
                      "example": 422
                    },
                    "message": {
                      "type": "string",
                      "description": "",
                      "example": "Empty document. Valid base64 required."
                    }
                  },
                  "required": [
                    "transaction_id"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "document1": {
                    "type": "string",
                    "description": "",
                    "example": ""
                  },
                  "document2": {
                    "type": "string",
                    "description": "",
                    "example": ""
                  },
                  "name": {
                    "type": "string",
                    "description": "",
                    "example": ""
                  }
                },
                "required": [
                  "document1"
                ]
              }
            }
          }
        }
      }
    },
    "/v1/documents/quality/authenticity-check": {
      "post": {
        "tags": [
          "Document Forensics"
        ],
        "summary": "Authenticity Check",
        "description": "Document Authenticity Check API lets you determine whether the KYC document such as Aadhaar, PAN, Bank Cheque etc. is valid or not. It performs several checks against Photocopy, Blurriness, Templates etc. to confirm whether a document is valid or not.",
        "operationId": "Document Forensics_authenticity-check",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "description": "",
                      "example": "Document successfully validated."
                    },
                    "transaction_id": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    }
                  },
                  "required": [
                    "transaction_id"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "detail": {
                      "type": "string",
                      "description": "",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "document1": {
                    "type": "string",
                    "description": "",
                    "example": ""
                  },
                  "document2": {
                    "type": "string",
                    "description": "",
                    "example": ""
                  },
                  "document_type": {
                    "type": "integer",
                    "description": "",
                    "example": 0
                  },
                  "is_back": {
                    "type": "integer",
                    "description": "",
                    "example": 0
                  }
                },
                "required": [
                  "document1",
                  "document_type",
                  "is_back"
                ]
              }
            }
          }
        }
      }
    },
    "/pet": {
      "put": {
        "tags": [
          "pet"
        ],
        "summary": "Update an existing pet",
        "description": "Update an existing pet by Id",
        "operationId": "pet_update-an-existing-pet",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "",
                      "example": 10,
                      "format": "int64"
                    },
                    "name": {
                      "type": "string",
                      "description": "",
                      "example": "doggie"
                    },
                    "category": {
                      "type": "object",
                      "description": "",
                      "example": {
                        "id": 1,
                        "name": "Dogs"
                      },
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "",
                          "example": 1,
                          "format": "int64"
                        },
                        "name": {
                          "type": "string",
                          "description": "",
                          "example": "Dogs"
                        }
                      }
                    },
                    "photoUrls": {
                      "type": "array",
                      "description": "",
                      "example": [
                        []
                      ],
                      "items": {
                        "type": "object",
                        "properties": {}
                      }
                    },
                    "tags": {
                      "type": "array",
                      "description": "",
                      "example": [
                        [
                          0,
                          ""
                        ]
                      ],
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "",
                            "example": 0,
                            "format": "int64"
                          },
                          "name": {
                            "type": "string",
                            "description": "",
                            "example": ""
                          }
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "description": "pet status in the store",
                      "example": "available"
                    }
                  },
                  "required": [
                    "name",
                    "photoUrls"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "404": {
            "description": "Pet not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "422": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "",
                    "example": 10,
                    "format": "int64"
                  },
                  "name": {
                    "type": "string",
                    "description": "",
                    "example": "doggie"
                  },
                  "category": {
                    "type": "object",
                    "description": "",
                    "example": {
                      "id": 1,
                      "name": "Dogs"
                    },
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "",
                        "example": 1,
                        "format": "int64"
                      },
                      "name": {
                        "type": "string",
                        "description": "",
                        "example": "Dogs"
                      }
                    }
                  },
                  "photoUrls": {
                    "type": "array",
                    "description": "",
                    "example": [
                      []
                    ],
                    "items": {
                      "type": "object",
                      "properties": {}
                    }
                  },
                  "tags": {
                    "type": "array",
                    "description": "",
                    "example": [
                      [
                        0,
                        ""
                      ]
                    ],
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "",
                          "example": 0,
                          "format": "int64"
                        },
                        "name": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        }
                      }
                    }
                  },
                  "status": {
                    "type": "string",
                    "description": "pet status in the store",
                    "example": "available"
                  }
                },
                "required": [
                  "name",
                  "photoUrls"
                ]
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "pet"
        ],
        "summary": "Add a new pet to the store",
        "description": "Add a new pet to the store",
        "operationId": "pet_add-a-new-pet-to-the-store",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "",
                      "example": 10,
                      "format": "int64"
                    },
                    "name": {
                      "type": "string",
                      "description": "",
                      "example": "doggie"
                    },
                    "category": {
                      "type": "object",
                      "description": "",
                      "example": {
                        "id": 1,
                        "name": "Dogs"
                      },
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "",
                          "example": 1,
                          "format": "int64"
                        },
                        "name": {
                          "type": "string",
                          "description": "",
                          "example": "Dogs"
                        }
                      }
                    },
                    "photoUrls": {
                      "type": "array",
                      "description": "",
                      "example": [
                        []
                      ],
                      "items": {
                        "type": "object",
                        "properties": {}
                      }
                    },
                    "tags": {
                      "type": "array",
                      "description": "",
                      "example": [
                        [
                          0,
                          ""
                        ]
                      ],
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "",
                            "example": 0,
                            "format": "int64"
                          },
                          "name": {
                            "type": "string",
                            "description": "",
                            "example": ""
                          }
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "description": "pet status in the store",
                      "example": "available"
                    }
                  },
                  "required": [
                    "name",
                    "photoUrls"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "422": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "",
                    "example": 10,
                    "format": "int64"
                  },
                  "name": {
                    "type": "string",
                    "description": "",
                    "example": "doggie"
                  },
                  "category": {
                    "type": "object",
                    "description": "",
                    "example": {
                      "id": 1,
                      "name": "Dogs"
                    },
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "",
                        "example": 1,
                        "format": "int64"
                      },
                      "name": {
                        "type": "string",
                        "description": "",
                        "example": "Dogs"
                      }
                    }
                  },
                  "photoUrls": {
                    "type": "array",
                    "description": "",
                    "example": [
                      []
                    ],
                    "items": {
                      "type": "object",
                      "properties": {}
                    }
                  },
                  "tags": {
                    "type": "array",
                    "description": "",
                    "example": [
                      [
                        0,
                        ""
                      ]
                    ],
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "",
                          "example": 0,
                          "format": "int64"
                        },
                        "name": {
                          "type": "string",
                          "description": "",
                          "example": ""
                        }
                      }
                    }
                  },
                  "status": {
                    "type": "string",
                    "description": "pet status in the store",
                    "example": "available"
                  }
                },
                "required": [
                  "name",
                  "photoUrls"
                ]
              }
            }
          }
        }
      }
    },
    "/pet/findByStatus": {
      "get": {
        "tags": [
          "pet"
        ],
        "summary": "Finds Pets by status",
        "description": "Multiple status values can be provided with comma separated strings",
        "operationId": "pet_finds-pets-by-status",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "available",
              "description": "Status values that need to be considered for filter",
              "default": "available",
              "enum": [
                "available",
                "pending",
                "sold"
              ]
            },
            "description": "Status values that need to be considered for filter"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "0": {
                      "type": "array",
                      "description": "",
                      "example": [
                        10,
                        "doggie",
                        {
                          "id": 1,
                          "name": "Dogs"
                        },
                        [
                          []
                        ],
                        [
                          [
                            0,
                            ""
                          ]
                        ],
                        "available"
                      ],
                      "items": {
                        "type": "integer",
                        "description": "",
                        "example": 10,
                        "format": "int64"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid status value",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        }
      }
    },
    "/pet/findByTags": {
      "get": {
        "tags": [
          "pet"
        ],
        "summary": "Finds Pets by tags",
        "description": "Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.",
        "operationId": "pet_finds-pets-by-tags",
        "parameters": [
          {
            "name": "tags",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "example": "",
              "description": "Tags to filter by",
              "default": ""
            },
            "description": "Tags to filter by"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "0": {
                      "type": "array",
                      "description": "",
                      "example": [
                        10,
                        "doggie",
                        {
                          "id": 1,
                          "name": "Dogs"
                        },
                        [
                          []
                        ],
                        [
                          [
                            0,
                            ""
                          ]
                        ],
                        "available"
                      ],
                      "items": {
                        "type": "integer",
                        "description": "",
                        "example": 10,
                        "format": "int64"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid tag value",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        }
      }
    },
    "/pet/{petId}": {
      "get": {
        "tags": [
          "pet"
        ],
        "summary": "Find pet by ID",
        "description": "Returns a single pet",
        "operationId": "pet_find-pet-by-id",
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": "",
              "format": "int64",
              "description": "ID of pet to return",
              "default": ""
            },
            "description": "ID of pet to return"
          },
          {
            "name": "api_key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "",
                      "example": 10,
                      "format": "int64"
                    },
                    "name": {
                      "type": "string",
                      "description": "",
                      "example": "doggie"
                    },
                    "category": {
                      "type": "object",
                      "description": "",
                      "example": {
                        "id": 1,
                        "name": "Dogs"
                      },
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "",
                          "example": 1,
                          "format": "int64"
                        },
                        "name": {
                          "type": "string",
                          "description": "",
                          "example": "Dogs"
                        }
                      }
                    },
                    "photoUrls": {
                      "type": "array",
                      "description": "",
                      "example": [
                        []
                      ],
                      "items": {
                        "type": "object",
                        "properties": {}
                      }
                    },
                    "tags": {
                      "type": "array",
                      "description": "",
                      "example": [
                        [
                          0,
                          ""
                        ]
                      ],
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "",
                            "example": 0,
                            "format": "int64"
                          },
                          "name": {
                            "type": "string",
                            "description": "",
                            "example": ""
                          }
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "description": "pet status in the store",
                      "example": "available"
                    }
                  },
                  "required": [
                    "name",
                    "photoUrls"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "404": {
            "description": "Pet not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "pet"
        ],
        "summary": "Updates a pet in the store with form data",
        "description": "Everything about your Pets",
        "operationId": "pet_updates-a-pet-in-the-store-with-form-data",
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": "",
              "format": "int64",
              "description": "ID of pet that needs to be updated",
              "default": ""
            },
            "description": "ID of pet that needs to be updated"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "",
              "description": "Name of pet that needs to be updated",
              "default": ""
            },
            "description": "Name of pet that needs to be updated"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "",
              "description": "Status of pet that needs to be updated",
              "default": ""
            },
            "description": "Status of pet that needs to be updated"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "pet"
        ],
        "summary": "Deletes a pet",
        "description": "delete a pet",
        "operationId": "pet_deletes-a-pet",
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": "",
              "format": "int64",
              "description": "Pet id to delete",
              "default": ""
            },
            "description": "Pet id to delete"
          },
          {
            "name": "api_key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid pet value",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        }
      }
    },
    "/pet/{petId}/uploadImage": {
      "post": {
        "tags": [
          "pet"
        ],
        "summary": "uploads an image",
        "description": "Everything about your Pets",
        "operationId": "pet_uploads-an-image",
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": "",
              "format": "int64",
              "description": "ID of pet to update",
              "default": ""
            },
            "description": "ID of pet to update"
          },
          {
            "name": "additionalMetadata",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "",
              "description": "Additional Metadata",
              "default": ""
            },
            "description": "Additional Metadata"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "integer",
                      "description": "",
                      "example": 0,
                      "format": "int32"
                    },
                    "type": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    },
                    "message": {
                      "type": "string",
                      "description": "",
                      "example": ""
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "required": true,
          "content": {
            "file": {
              "schema": {
                "type": "object",
                "properties": {
                  "File": {
                    "type": "binary",
                    "description": "",
                    "example": "/path/to/the/file"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/store/inventory": {
      "get": {
        "tags": [
          "store"
        ],
        "summary": "Returns pet inventories by status",
        "description": "Returns a map of status codes to quantities",
        "operationId": "store_returns-pet-inventories-by-status",
        "parameters": [
          {
            "name": "api_key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "example": "",
              "description": "",
              "default": ""
            },
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        }
      }
    },
    "/store/order": {
      "post": {
        "tags": [
          "store"
        ],
        "summary": "Place an order for a pet",
        "description": "Place a new order in the store",
        "operationId": "store_place-an-order-for-a-pet",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "",
                      "example": 10,
                      "format": "int64"
                    },
                    "petId": {
                      "type": "integer",
                      "description": "",
                      "example": 198772,
                      "format": "int64"
                    },
                    "quantity": {
                      "type": "integer",
                      "description": "",
                      "example": 7,
                      "format": "int32"
                    },
                    "shipDate": {
                      "type": "string",
                      "description": "",
                      "example": "",
                      "format": "date-time"
                    },
                    "status": {
                      "type": "string",
                      "description": "Order Status",
                      "example": "approved"
                    },
                    "complete": {
                      "type": "boolean",
                      "description": "",
                      "example": false
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "422": {
            "description": "Validation exception",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "",
                    "example": 10,
                    "format": "int64"
                  },
                  "petId": {
                    "type": "integer",
                    "description": "",
                    "example": 198772,
                    "format": "int64"
                  },
                  "quantity": {
                    "type": "integer",
                    "description": "",
                    "example": 7,
                    "format": "int32"
                  },
                  "shipDate": {
                    "type": "string",
                    "description": "",
                    "example": "",
                    "format": "date-time"
                  },
                  "status": {
                    "type": "string",
                    "description": "Order Status",
                    "example": "approved"
                  },
                  "complete": {
                    "type": "boolean",
                    "description": "",
                    "example": false
                  }
                }
              }
            }
          }
        }
      }
    },
    "/store/order/{orderId}": {
      "get": {
        "tags": [
          "store"
        ],
        "summary": "Find purchase order by ID",
        "description": "For valid response try integer IDs with value <= 5 or > 10. Other values will generate exceptions.",
        "operationId": "store_find-purchase-order-by-id",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": "",
              "format": "int64",
              "description": "ID of order that needs to be fetched",
              "default": ""
            },
            "description": "ID of order that needs to be fetched"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "",
                      "example": 10,
                      "format": "int64"
                    },
                    "petId": {
                      "type": "integer",
                      "description": "",
                      "example": 198772,
                      "format": "int64"
                    },
                    "quantity": {
                      "type": "integer",
                      "description": "",
                      "example": 7,
                      "format": "int32"
                    },
                    "shipDate": {
                      "type": "string",
                      "description": "",
                      "example": "",
                      "format": "date-time"
                    },
                    "status": {
                      "type": "string",
                      "description": "Order Status",
                      "example": "approved"
                    },
                    "complete": {
                      "type": "boolean",
                      "description": "",
                      "example": false
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "404": {
            "description": "Order not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "store"
        ],
        "summary": "Delete purchase order by ID",
        "description": "For valid response try integer IDs with value < 1000. Anything above 1000 or nonintegers will generate API errors",
        "operationId": "store_delete-purchase-order-by-id",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "example": "",
              "format": "int64",
              "description": "ID of the order that needs to be deleted",
              "default": ""
            },
            "description": "ID of the order that needs to be deleted"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "404": {
            "description": "Order not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        }
      }
    },
    "/user": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create user",
        "description": "This can only be done by the logged in user.",
        "operationId": "user_create-user",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "",
                      "example": 10,
                      "format": "int64"
                    },
                    "username": {
                      "type": "string",
                      "description": "",
                      "example": "theUser"
                    },
                    "firstName": {
                      "type": "string",
                      "description": "",
                      "example": "John"
                    },
                    "lastName": {
                      "type": "string",
                      "description": "",
                      "example": "James"
                    },
                    "email": {
                      "type": "string",
                      "description": "",
                      "example": "john@email.com"
                    },
                    "password": {
                      "type": "string",
                      "description": "",
                      "example": "12345"
                    },
                    "phone": {
                      "type": "string",
                      "description": "",
                      "example": "12345"
                    },
                    "userStatus": {
                      "type": "integer",
                      "description": "User Status",
                      "example": 1,
                      "format": "int32"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "",
                    "example": 10,
                    "format": "int64"
                  },
                  "username": {
                    "type": "string",
                    "description": "",
                    "example": "theUser"
                  },
                  "firstName": {
                    "type": "string",
                    "description": "",
                    "example": "John"
                  },
                  "lastName": {
                    "type": "string",
                    "description": "",
                    "example": "James"
                  },
                  "email": {
                    "type": "string",
                    "description": "",
                    "example": "john@email.com"
                  },
                  "password": {
                    "type": "string",
                    "description": "",
                    "example": "12345"
                  },
                  "phone": {
                    "type": "string",
                    "description": "",
                    "example": "12345"
                  },
                  "userStatus": {
                    "type": "integer",
                    "description": "User Status",
                    "example": 1,
                    "format": "int32"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/createWithList": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Creates list of users with given input array",
        "description": "Creates list of users with given input array",
        "operationId": "user_creates-list-of-users-with-given-input-array",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "0": {
                    "type": "array",
                    "description": "",
                    "example": [
                      10,
                      "theUser",
                      "John",
                      "James",
                      "john@email.com",
                      "12345",
                      "12345",
                      1
                    ],
                    "items": {
                      "type": "integer",
                      "description": "",
                      "example": 10,
                      "format": "int64"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/login": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Logs user into the system",
        "description": "Operations about user",
        "operationId": "user_logs-user-into-the-system",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "",
              "description": "The user name for login",
              "default": ""
            },
            "description": "The user name for login"
          },
          {
            "name": "password",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "",
              "description": "The password for login in clear text",
              "default": ""
            },
            "description": "The password for login in clear text"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "Invalid username/password supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        }
      }
    },
    "/user/logout": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Logs out current logged in user session",
        "description": "Operations about user",
        "operationId": "user_logs-out-current-logged-in-user-session",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        }
      }
    },
    "/user/{username}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get user by user name",
        "description": "Operations about user",
        "operationId": "user_get-user-by-user-name",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "The name that needs to be fetched. Use user1 for testing. ",
              "default": ""
            },
            "description": "The name that needs to be fetched. Use user1 for testing. "
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "",
                      "example": 10,
                      "format": "int64"
                    },
                    "username": {
                      "type": "string",
                      "description": "",
                      "example": "theUser"
                    },
                    "firstName": {
                      "type": "string",
                      "description": "",
                      "example": "John"
                    },
                    "lastName": {
                      "type": "string",
                      "description": "",
                      "example": "James"
                    },
                    "email": {
                      "type": "string",
                      "description": "",
                      "example": "john@email.com"
                    },
                    "password": {
                      "type": "string",
                      "description": "",
                      "example": "12345"
                    },
                    "phone": {
                      "type": "string",
                      "description": "",
                      "example": "12345"
                    },
                    "userStatus": {
                      "type": "integer",
                      "description": "User Status",
                      "example": 1,
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid username supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Update user",
        "description": "This can only be done by the logged in user.",
        "operationId": "user_update-user",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "name that need to be deleted",
              "default": ""
            },
            "description": "name that need to be deleted"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "Request body",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "",
                    "example": 10,
                    "format": "int64"
                  },
                  "username": {
                    "type": "string",
                    "description": "",
                    "example": "theUser"
                  },
                  "firstName": {
                    "type": "string",
                    "description": "",
                    "example": "John"
                  },
                  "lastName": {
                    "type": "string",
                    "description": "",
                    "example": "James"
                  },
                  "email": {
                    "type": "string",
                    "description": "",
                    "example": "john@email.com"
                  },
                  "password": {
                    "type": "string",
                    "description": "",
                    "example": "12345"
                  },
                  "phone": {
                    "type": "string",
                    "description": "",
                    "example": "12345"
                  },
                  "userStatus": {
                    "type": "integer",
                    "description": "User Status",
                    "example": 1,
                    "format": "int32"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Delete user",
        "description": "This can only be done by the logged in user.",
        "operationId": "user_delete-user",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "",
              "description": "The name that needs to be deleted",
              "default": ""
            },
            "description": "The name that needs to be deleted"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid username supplied",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {},
  "tags": [
    {
      "name": "Deepvue.tech Developers' Guide",
      "description": ""
    },
    {
      "name": "Authorization",
      "description": ""
    },
    {
      "name": "Retail",
      "description": ""
    },
    {
      "name": "Risk & CDD",
      "description": ""
    },
    {
      "name": "Offline Aadhaar eKYC",
      "description": ""
    },
    {
      "name": "KYC APIs",
      "description": ""
    },
    {
      "name": "Async KYC APIs",
      "description": ""
    },
    {
      "name": "GST APIs",
      "description": ""
    },
    {
      "name": "GST Taxpayer APIs",
      "description": ""
    },
    {
      "name": "MSME APIs",
      "description": ""
    },
    {
      "name": "Document OCR",
      "description": ""
    },
    {
      "name": "Document Forensics",
      "description": ""
    },
    {
      "name": "Swagger Petstore - OpenAPI 3.0",
      "description": ""
    },
    {
      "name": "pet",
      "description": ""
    },
    {
      "name": "store",
      "description": ""
    },
    {
      "name": "user",
      "description": ""
    }
  ],
  "x-theneo-metadata": {
    "menu": [
      {
        "name": "Deepvue.tech Developers' Guide",
        "description": "Deepvue.tech's APIs and SDKs are a No-Code Solution to Document Digitization and Verification for Businesses.",
        "subSections": []
      },
      {
        "name": "Authorization",
        "description": "- You need an Authorized Access Token to access any of the Platform APIs.\n- One Access Token will be valid for only 24 hours.\n- After 24 hours, you can renew the token by using the Authorize Endpoint.\n- This will issue another access_token valid for 24 hrs.",
        "subSections": [
          {
            "name": "Authorize",
            "operationId": "Authorization_authorize",
            "description": ""
          }
        ]
      },
      {
        "name": "Retail",
        "description": "Computer Vision APIs to Digitize MSME Onboarding Documents.",
        "subSections": [
          {
            "name": "Merchant Category Classification",
            "operationId": "Retail_merchant-category-classification",
            "description": ""
          },
          {
            "name": "Displayboard Recognition",
            "operationId": "Retail_displayboard-recognition",
            "description": ""
          }
        ]
      },
      {
        "name": "Risk & CDD",
        "description": "APIs for Enhanced Due Diligence Checks in real time.",
        "subSections": [
          {
            "name": "Identity Matching",
            "operationId": "Risk & CDD_identity-matching",
            "description": "Deepvue.tech Realtime Facematch API lets you compare faces present in two different documents, within seconds.   \nTwo files required for this API can be images of two id-cards or one id-card and a selfie.   \n\nThis API performs a realtime AI-based face recognition and matching in the background,    \nreturns back with whether two faces match or not and a corresponding *confidence* value of the match."
          }
        ]
      },
      {
        "name": "Offline Aadhaar eKYC",
        "description": "Offline Aadhaar KYC, or OKYC, is a legally compliant KYC method as per UIDAI guidelines.   \n                        Your customers can provide their Aadhaar number and verify with an OTP sent to their Aadhaar-linked mobile number, to access a downloadable XML file with their Aadhaar details.   \n\n**How does Offline Aadhaar Verification work?**    \n                        **Provide Consent**:  Customers agree or disagree to continue at the initial screen.   \n                        **Share Aadhaar Number**: Customers provide their Aadhaar number to proceed with the verification.   \n                        **Verify with OTP**: Verify with an OTP sent to their Aadhaar-linked mobile number by UIDAI, to access a downloadable XML file with their Aadhaar details in a share code manner.    \n                        **Realtime face match** for liveness detection: The Aadhaar Offline document has Name, Address, Photo, Gender, DOB. Optionally, the photo in the UIDAI Issued Aadhaar document can be matched with customers' live photo or a selfie in real time to ensure liveness checks.   \n\n*You can simply integrate Offline Aadhaar eKYC within your application with no-code and in no time with our Deepvue.tech Offline Aadhaar eKYC SDKs.*    \n\n**Below are the integration guides to integrate the platform specific SDKs:**   \n**Android SDK** : https://github.com/deepvue-tech/deepvue-aadhaar-offline-ekyc-android-sdk   \n                        **iOS SDK** : https://github.com/deepvue-tech/deepvue-aadhaar-offline-ekyc-ios-sdk   \n                        **React-Native SDK** : https://github.com/deepvue-tech/deepvue-aadhaar-offline-ekyc-react-sdk    \n                        **Flutter SDK** : https://pub.dev/packages/aadhaar_offline_ekyc    \n\n**NOTE**:   \n            \n        As per the compliances by UIDAI on sharing and storage of Aadhaar number is not allowed.    \n        \n        Service Providers shall not share, publish or display either Share Code or XML file or its contents with anyone else.   \n        Any non-compliance of these actions shall invite actions under Sections 17 and 25 of The Aadhaar (Authentication) Regulation, 2016,    \n        Sections 4 and 6 of The Aadhaar (Sharing of Information) Regulation, 2016 and Sections 29(2), 29 (3), and 37 of The Aadhaar Act, 2016.   \n\n        Consent should be mandatorily stored at the company end to proceed with verification.   \n\nIf you want to integrate Aadhaar eKYC in your web application or want to build your own customized workflow you can use our Aadhaar eKYC APIs detailed below.   \n\nEmbed offline eKYC Aadhaar flow to verify consumers on your application using a simple flow.    \n                                - **Initiate Session**: This API allows the platform to initiate a session to get the captcha before passing the Aadhaar number of the customer.    \n                                - **Generate OTP**: This API allows the platform to pass the Aadhaar number to generate OTP to the linked mobile number.    \n                                - **Verify OTP**: This API allows the platform to pass the OTP to Deepvue.tech to fetch the customer's Aadhaar information from UIDAI.    \n\nIf the customer or the platform wishes to restart the session, a new captcha can be generated using the Reload Captcha API.",
        "subSections": [
          {
            "name": "Initiate Session",
            "operationId": "Offline Aadhaar eKYC_initiate-session",
            "description": "This API allows to initiate a session with UIDAI to fetch Captcha before passing the Aadhaar number of the customer. \n    "
          },
          {
            "name": "Reload Captcha",
            "operationId": "Offline Aadhaar eKYC_reload-captcha",
            "description": "This API can be used in case the user needs to reload the captcha or an invalid captcha is entered.\n    "
          },
          {
            "name": "Generate Otp",
            "operationId": "Offline Aadhaar eKYC_generate-otp",
            "description": "This API will trigger OTP via UIDAI to Aadhaar registered mobile number.\n    "
          },
          {
            "name": "Verify Otp",
            "operationId": "Offline Aadhaar eKYC_verify-otp",
            "description": "This API will validate the OTP entered by the user to authenticate with UIDAI. Once successfully validated response will have the below details.   \n- Reference number\n- Resident’s name\n- Resident's address\n- Gender\n- Photo\n- Date of Birth\n- Mobile number in hashed form\n- Email in hashed form"
          }
        ]
      },
      {
        "name": "KYC APIs",
        "description": "Verify Aadhaar, PAN, GSTIN, Bank Account, and UPI details in real time for quick KYC checks.",
        "subSections": [
          {
            "name": "Aadhaar Basic Verification",
            "operationId": "KYC APIs_aadhaar-basic-verification",
            "description": "Aadhaar is an important identification document used by businesses to establish identity of user for customer KYC.   \n\nWith Aadhaar Verification, just enter the 12-digit Aadhaar number and know whether the Aadhaar is valid or not   \nalong with details like *age_band*, *gender*, *state* and the last three digits of their registered *mobile_number*, in seconds.   \n\nKey Features of this API are:   \n✅ Online Aadhaar Verification   \n✅ Simple & easy integration   \n✅ Verification status in real-time   "
          },
          {
            "name": "Pan Basic Verification",
            "operationId": "KYC APIs_pan-basic-verification",
            "description": "The primary objective of PAN is to use a universal identification key to track financial transactions that might\nhave a taxable component to prevent tax evasion.   \n\nThe PAN number remains unaffected by the change of address throughout India.   \nThis API lets you verify PANs. You can also check whether the given PAN is valid or not.   \nYou will get basic information such as *Name*, *Category*, and *Status* of PAN.   \n\nVerify PAN numbers by taking in the pan and receiving information pertaining to the PAN.   "
          },
          {
            "name": "Pan Advanced Verification",
            "operationId": "KYC APIs_pan-advanced-verification",
            "description": "The Advance Authentication API provides additional details compared to Basic Authentication.    \nThe Additional information are *last_name*, *last_updated* date of PAN ,and *aadhar_seeding_status*. "
          },
          {
            "name": "Pan Plus Verification",
            "operationId": "KYC APIs_pan-plus-verification",
            "description": "The Pan Plus Authentication API provides additional details compared to Advanced Authentication.    \nVerify additional details such as DOB, Gender, Email, Phone, Address from PAN Number."
          },
          {
            "name": "Bank Account Verification",
            "operationId": "KYC APIs_bank-account-verification",
            "description": "Bank account verification or penny drop check is a way to verify the authenticity of a customer's bank account.\nWe take the Bank Account details and deposit 1 INR into the account. In return, we are able to fetch the Account Information\n\nThe API verifies a bank account and IFSC code combination.    \n\nA successful response is billable only in case of a 200 Response Status Code."
          },
          {
            "name": "Ifsc Verification",
            "operationId": "KYC APIs_ifsc-verification",
            "description": "IFSC code is a unique identifier for a bank branch. Businesses verify IFSC before performing penny-drop to ensure successful payouts.   \n\nVerify IFSC code and receive details of the bank branch associated with that IFSC Code.    \n\nIFSC Verification API helps verifying IFSC code against RBI's IFSC Master and provide bank & branch details.   "
          },
          {
            "name": "Upi Verification",
            "operationId": "KYC APIs_upi-verification",
            "description": "You can verify the UPI details of your customer before adding them to your payouts account using the UPI Verification feature.\nThis helps you in making successful transfers to your customers.\n\nSome of the businesses may want to verify the customer name against the UPI, or if want to validate if the given UPI exists, this can be done instantly with UPI Verification.\n\nThe API verifies a UPI ID. A successful response is billable only in case of a 200 Response Status Code."
          }
        ]
      },
      {
        "name": "Async KYC APIs",
        "description": "Verify other Identity documents such as Driving License, Vehicle Registration Certificate etc. in real time for fast KYC checks.    \n        These are Asynchronous APIs which return a request ID and use a webhook mechanism to return the response back to your servers.    \n        You can then use this request ID and feed this into our GET API to consume the response.",
        "subSections": [
          {
            "name": "Async Post Driving License Verification",
            "operationId": "Async KYC APIs_async-post-driving-license-verification",
            "description": "The Driving License Verification API instantly verifies details of a driving license by confirming them from the Government database.   \nThis makes your onboarding process safer, faster, and smarter. With Deepvue.tech's DL verification API,   \nyou can be confident that the individuals you onboard hold a valid DL and have provided you with the right identity proof."
          },
          {
            "name": "Async Get Driving License Verification",
            "operationId": "Async KYC APIs_async-get-driving-license-verification",
            "description": "This API gives you back the complete result and verification details against your request id receieved in previous step."
          },
          {
            "name": "Async Post Vehicle Registration Verification",
            "operationId": "Async KYC APIs_async-post-vehicle-registration-verification",
            "description": "The Vehicle Registration Verification API helps to establish a link between the vehicle and its owner, thereby minimizing the potential for fraud.   \nYou can now confidently onboard vehicles and individuals knowing that the vehicle is genuine, registered by an RTO, and associated with a specific individual."
          },
          {
            "name": "Async Get Vehicle Registration Verification",
            "operationId": "Async KYC APIs_async-get-vehicle-registration-verification",
            "description": "This API gives you back the complete result and verification details against your request id receieved in previous step."
          },
          {
            "name": "Async Post Voter Id Verification",
            "operationId": "Async KYC APIs_async-post-voter-id-verification",
            "description": "The Voter Id Verification API instantly verifies details of a voter id number by confirming them from the Government database.   \nThis makes your onboarding process safer, faster, and smarter. With Deepvue.tech's Voter Id Verification API,   \nyou can be confident that the individuals you onboard hold a valid Voter Id and have provided you with the right identity proof."
          },
          {
            "name": "Async Get Voter Id Verification",
            "operationId": "Async KYC APIs_async-get-voter-id-verification",
            "description": "This API gives you back the complete result and verification details against your request id receieved in previous step."
          },
          {
            "name": "Async Post Udyam Aadhaar Verification",
            "operationId": "Async KYC APIs_async-post-udyam-aadhaar-verification",
            "description": "Udyam Aadhaar Verification API allows you to verify details of Udyam Aadhaar Number from the Udyam aadhaar govt source.    \nThe API accepts a UAM number and responses with details about the Name of the Business, Major activity, Business Address, category type, expiration date, address, NIC Codes, etc."
          },
          {
            "name": "Async Get Udyam Aadhaar Verification",
            "operationId": "Async KYC APIs_async-get-udyam-aadhaar-verification",
            "description": "This API gives you back the complete result and verification details against your request id receieved in previous step."
          },
          {
            "name": "Async Post Udyog Aadhaar Verification",
            "operationId": "Async KYC APIs_async-post-udyog-aadhaar-verification",
            "description": "Udyog Aadhaar Verification API allows you to verify details of Udyog Aadhaar Number from the Udyam aadhaar govt source.    \nThe API accepts a UAM number and responses with details about the Name of the Business, Major activity, Business Address, category type, expiration date, address, NIC Codes, etc."
          },
          {
            "name": "Async Get Udyog Aadhaar Verification",
            "operationId": "Async KYC APIs_async-get-udyog-aadhaar-verification",
            "description": "This API gives you back the complete result and verification details against your request id receieved in previous step."
          }
        ]
      },
      {
        "name": "GST APIs",
        "description": "Set of APIs that help with GST Registered business verification and onboarding.",
        "subSections": [
          {
            "name": "Gstin Basic Verification",
            "operationId": "GST APIs_gstin-basic-verification",
            "description": "This API takes in the gstin of a business entity and provides you the information of the business entities as registered on the GST Portal.\n\nThe GSTIN Basic Verification API provides you the necessary information to verify an entity onboarding onto your workflow.   \nFor example, you can cross-check the information provided to you against the information available on the GST Portal using this API. "
          },
          {
            "name": "Gstin Advanced Verification",
            "operationId": "GST APIs_gstin-advanced-verification",
            "description": "This API takes in the gstin of a business entity and provides you the information of the business entities as registered on the GST Portal.\n\nVerifies basic GSTIN Details alongside advanced ones such as point of contact email & mobile, annual turnover and filing status and many more..."
          },
          {
            "name": "Search Taxpayer By Pan",
            "operationId": "GST APIs_search-taxpayer-by-pan",
            "description": "- The Search GSTIN API by PAN takes in the pan of a business entity and provides you with the information of all the business entities that are associated with that corresponding pan.    \n- The Search GSTIN API responds with the information of a particular GST entity associated with the GSTIN. However, Search GSTIN by PAN provides you with the details of all the entities that are associated with the pan.     "
          },
          {
            "name": "Track Gst Return Status",
            "operationId": "GST APIs_track-gst-return-status",
            "description": "- Track GST Return API accepts gstin and year (Financial year). This API then responds with the status of all the GSTRs filed by the given GSTIN and financial year.   \n- Tracking GSTRs gives an idea about the GST entity's compliance performance. A GST entity periodically and rightly filing GSTRs is a positive indication about its business and compliance performance.    "
          }
        ]
      },
      {
        "name": "GST Taxpayer APIs",
        "description": "The GST Taxpayer APIs are provided by the GSTN for public usage. These APIs, together, mirror the GST Portal.   \n\nTherefore, you can use these APIs to integrate GST compliance into your workflow itself.   \n\nUse the following workflow to access the GST Taxpayer APIs:   \n\n**First**, the GST taxpayer is authenticated using **OTP Verification**.   \n\n**Second**, after successful authentication, the GST Taxpayer APIs can be accessed.   \n   i. **Ledger APIs** - Fetch the taxpayer's ledger like a) Cash ITC Balance, b) Cash Ledger, c) ITC Ledger.   \n   ii. **Returns APIs** - Fetch the taxpayer's detailed summaries of GSTR -1 and GSTR -3B Returns.   ",
        "subSections": [
          {
            "name": "Generate Otp",
            "operationId": "GST Taxpayer APIs_generate-otp-1",
            "description": "First the taxpayer has to allow access to the GST Portal and enable it on his own GST Portal Account.   \n\nFollow the following steps to do the same:   \n    Step 1️⃣ : Login to your GST Account on https://gst.gov.in   \n    Step 2️⃣ : Click '*View Profile*' on Dashboard   \n    Step 3️⃣ : In the '*Quick Links*' section, go to *Manage API Access*     \n    Step 4️⃣ : Set '*Enable API Access Request*' to *Yes*   \n    Step 5️⃣ : Set '*Duration*' to *30days*   \n\n- Once the taxpayer has enabled API access onto GST Portal, the OTP verification can be carried out.   \n- First, Generate One Time Password API is called.   \n- This API takes in the gstin & username as per GST Portal. And then sends OTP to the phone number and email id of the GST Taxpayer.    \n\nOTP Message is as follows:   \n    \n    **OTP Message Sent to the Taxpayer**   \n    \n    Dear taxpayer,   \n    {{OTP}} is the OTP to verify your GST registration: {{GSTIN}}.   \n    OTP is valid till {{hh:mm:ss IST}}. Do not share OTP with anyone.   \n\n- OTP sent will be valid for 10 minutes.    "
          },
          {
            "name": "Verify Otp",
            "operationId": "GST Taxpayer APIs_verify-otp-1",
            "description": "- Once the last two steps are successfully completed. That is - the user has enabled API access on his GST Portal and GenerateOtp API an OTP has been sent. Then, this API is used to verify the OTP and enable access to GST Portal.\n- This API will start a session and provide access valid for 6 hrs. Returns date timestamp of the expiry of the session.\n- The end result of Tax Payer authentication process is to establish an authorization token for the session which needs to be included in the header for all subsequent API calls."
          },
          {
            "name": "Session Expiry",
            "operationId": "GST Taxpayer APIs_session-expiry",
            "description": "- Once authenticated, the GST Taxpayer APIs enable a session of 6 hours.    \n- Use Session Expiry API to find the time when the session expires for the particular gstin.   "
          },
          {
            "name": "Refresh Taxpayer Access",
            "operationId": "GST Taxpayer APIs_refresh-taxpayer-access",
            "description": "- Once authenticated, the GST Taxpayer APIs enable a session of 6 hours.   \n- Use Refresh Taxpayer API before the end of 6 hours to refresh the Taxpayer Access for more time.   "
          },
          {
            "name": "Cash Itc Balance",
            "operationId": "GST Taxpayer APIs_cash-itc-balance",
            "description": "- The Cash ITC Balance is the balance present after deduction of Input Tax Credit (ITC) has to be paid.   \n- The API takes in the gstin and the time period(month and year) for which you want to retrieve the Cash ITC Balance.   "
          },
          {
            "name": "Cash Ledger",
            "operationId": "GST Taxpayer APIs_cash-ledger",
            "description": "- The E-Cash or Electronic Cash Ledger under GST displays all the amounts deposited for payment of tax, interest, fee, or penalty. It also reflects TDS (Tax Deducted at Source) and TCS (Tax Collected at Source) since they are tax deposits of the taxpayer.    \n- The API takes in the gstin and the time period(from and to) for which you want to retrieve the Cash Ledger.    "
          },
          {
            "name": "Itc Ledger",
            "operationId": "GST Taxpayer APIs_itc-ledger",
            "description": "Retrieves ITC ledger."
          },
          {
            "name": "Gstr 1 Summary",
            "operationId": "GST Taxpayer APIs_gstr-1-summary",
            "description": "Get a table-wise summary of GSTR-1 data for the authenticated taxpayer (gstin) for a particular year and month. "
          },
          {
            "name": "Gstr 3B Summary",
            "operationId": "GST Taxpayer APIs_gstr-3b-summary",
            "description": "Get a summary in GSTR-3B for a return period (year and month) for the authenticated taxpayer (gstin)."
          }
        ]
      },
      {
        "name": "MSME APIs",
        "description": "Set of APIs that help with MSME Registered business verification and onboarding.",
        "subSections": [
          {
            "name": "Initiate Udyog Session",
            "operationId": "MSME APIs_initiate-udyog-session",
            "description": "First, a captcha has to be generated to start a fresh session with the MSME-Udyog-Aadhaar portal.   \nThis API Endpoint returns a base64 encoded captcha and a corresponding session id back."
          },
          {
            "name": "Reload Udyog Aadhaar Captcha",
            "operationId": "MSME APIs_reload-udyog-aadhaar-captcha",
            "description": ".   \nThis API Endpoint returns a fresh base64 encoded captcha for the given session id."
          },
          {
            "name": "Verify Udyog Aadhaar Details",
            "operationId": "MSME APIs_verify-udyog-aadhaar-details",
            "description": "With this API Endpoint, the captcha and session id generated in the previous step can be passed as valid parameters alongside the Udyog Aadhaar Number to verify a particular Udyog Aadhaar Number and fetch its details.   \nBase64 decoded value of the captcha should be passed for a valid and successful request."
          },
          {
            "name": "Initiate Udyam Session",
            "operationId": "MSME APIs_initiate-udyam-session",
            "description": "First, a captcha has to be generated to start a fresh session with the MSME-Udyam-Aadhaar portal.   \nThis API Endpoint returns a base64 encoded captcha and a corresponding session id back."
          },
          {
            "name": "Reload Udyam Aadhaar Captcha",
            "operationId": "MSME APIs_reload-udyam-aadhaar-captcha",
            "description": "This API Endpoint returns a fresh base64 encoded captcha for the given session id."
          },
          {
            "name": "Verify Udyam Aadhaar Details",
            "operationId": "MSME APIs_verify-udyam-aadhaar-details",
            "description": "With this API Endpoint, the captcha and session id generated in the previous step can be passed as valid parameters alongside the Udyam Aadhaar Number to verify a particular Udyam Aadhaar Number and fetch its details.   \nBase64 decoded value of the captcha should be passed for a valid and successful request."
          }
        ]
      },
      {
        "name": "Document OCR",
        "description": "Our systems use Modern & Latest OCR technology to scan the document images for field’s like full name, dob, address, etc. on the photo IDs and exctract these fields as key-value pairs.",
        "subSections": [
          {
            "name": "Ind Pan Ocr",
            "operationId": "Document OCR_ind-pan-ocr",
            "description": "PAN Card OCR API lets you extract relevant fields like *pan_number*, *name*, and *dob* from the image of a PAN Card document in the form of key-value pairs.    \n\nBase64 encoded string of the document needs to be passed in request payload."
          },
          {
            "name": "Ind Aadhaar Ocr",
            "operationId": "Document OCR_ind-aadhaar-ocr",
            "description": "With the help of Aadhaar Card OCR API you can extract relevant fields like *aadhaar_number*, *name*, *dob*, *address* from the image of an Aadhaar Card document in the form of key-value pairs.   \n\nBase64 encoded string of the document needs to be passed in request payload. "
          },
          {
            "name": "Ind Voter Id Ocr",
            "operationId": "Document OCR_ind-voter-id-ocr",
            "description": "Voter Card OCR API lets you extract voter fields like *voter_id*, *name*, *father name*, *dob*, and *address* etc. from the image of a Voter Card document in the form of key-value pairs.   \n\nBase64 encoded string of the document needs to be passed in request payload. "
          },
          {
            "name": "Ind Driving License Ocr",
            "operationId": "Document OCR_ind-driving-license-ocr",
            "description": "Driving License OCR API lets you extract relevant fields like *dl_number*, *name*, *validity*, *dob*, and address etc. from the image of a DL document in the form of key-value pairs.    \n\nBase64 encoded string of the document needs to be passed in request payload. "
          },
          {
            "name": "Ind Bank Cheque Ocr",
            "operationId": "Document OCR_ind-bank-cheque-ocr",
            "description": "Manually typing in or verifying bank details like the account number, IFSC and account holder name is slow and cumbersome.    \nDeepvue.tech’s Bank Cheque OCR API lets you do it in a blink of an eye and enables your Operations with instant Bank Cheque OCR.   \n\nWith Bank Cheque OCR API, you can digitize an image of a bank cheque in no time.    \n\nBase64 encoded string of the document needs to be passed in request payload."
          }
        ]
      },
      {
        "name": "Document Forensics",
        "description": "Set of APIs that help with document forensic checks like template validation, image quality, photocopy, and spoof checks.",
        "subSections": [
          {
            "name": "Authenticity Check",
            "operationId": "Document Forensics_authenticity-check",
            "description": "Document Authenticity Check API lets you determine whether the KYC document such as Aadhaar, PAN, Bank Cheque etc. is valid or not. It performs several checks against Photocopy, Blurriness, Templates etc. to confirm whether a document is valid or not."
          }
        ]
      },
      {
        "name": "Swagger Petstore - OpenAPI 3.0",
        "description": "This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about\nSwagger at [https://swagger.io](https://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!\nYou can now help us improve the API whether it's by making changes to the definition itself or to the code.\nThat way, with time, we can improve the API in general, and expose some of the new features in OAS3.\n\n_If you're looking for the Swagger 2.0/OAS 2.0 version of Petstore, then click [here](https://editor.swagger.io/?url=https://petstore.swagger.io/v2/swagger.yaml). Alternatively, you can load via the `Edit > Load Petstore OAS 2.0` menu option!_\n\nSome useful links:\n- [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)\n- [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)",
        "subSections": []
      },
      {
        "name": "pet",
        "description": "Everything about your Pets",
        "subSections": [
          {
            "name": "Update an existing pet",
            "operationId": "pet_update-an-existing-pet",
            "description": "Update an existing pet by Id"
          },
          {
            "name": "Add a new pet to the store",
            "operationId": "pet_add-a-new-pet-to-the-store",
            "description": "Add a new pet to the store"
          },
          {
            "name": "Finds Pets by status",
            "operationId": "pet_finds-pets-by-status",
            "description": "Multiple status values can be provided with comma separated strings"
          },
          {
            "name": "Finds Pets by tags",
            "operationId": "pet_finds-pets-by-tags",
            "description": "Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing."
          },
          {
            "name": "Find pet by ID",
            "operationId": "pet_find-pet-by-id",
            "description": "Returns a single pet"
          },
          {
            "name": "Updates a pet in the store with form data",
            "operationId": "pet_updates-a-pet-in-the-store-with-form-data",
            "description": ""
          },
          {
            "name": "Deletes a pet",
            "operationId": "pet_deletes-a-pet",
            "description": "delete a pet"
          },
          {
            "name": "uploads an image",
            "operationId": "pet_uploads-an-image",
            "description": ""
          }
        ]
      },
      {
        "name": "store",
        "description": "Access to Petstore orders",
        "subSections": [
          {
            "name": "Returns pet inventories by status",
            "operationId": "store_returns-pet-inventories-by-status",
            "description": "Returns a map of status codes to quantities"
          },
          {
            "name": "Place an order for a pet",
            "operationId": "store_place-an-order-for-a-pet",
            "description": "Place a new order in the store"
          },
          {
            "name": "Find purchase order by ID",
            "operationId": "store_find-purchase-order-by-id",
            "description": "For valid response try integer IDs with value <= 5 or > 10. Other values will generate exceptions."
          },
          {
            "name": "Delete purchase order by ID",
            "operationId": "store_delete-purchase-order-by-id",
            "description": "For valid response try integer IDs with value < 1000. Anything above 1000 or nonintegers will generate API errors"
          }
        ]
      },
      {
        "name": "user",
        "description": "Operations about user",
        "subSections": [
          {
            "name": "Create user",
            "operationId": "user_create-user",
            "description": "This can only be done by the logged in user."
          },
          {
            "name": "Creates list of users with given input array",
            "operationId": "user_creates-list-of-users-with-given-input-array",
            "description": "Creates list of users with given input array"
          },
          {
            "name": "Logs user into the system",
            "operationId": "user_logs-user-into-the-system",
            "description": ""
          },
          {
            "name": "Logs out current logged in user session",
            "operationId": "user_logs-out-current-logged-in-user-session",
            "description": ""
          },
          {
            "name": "Get user by user name",
            "operationId": "user_get-user-by-user-name",
            "description": ""
          },
          {
            "name": "Update user",
            "operationId": "user_update-user",
            "description": "This can only be done by the logged in user."
          },
          {
            "name": "Delete user",
            "operationId": "user_delete-user",
            "description": "This can only be done by the logged in user."
          }
        ]
      }
    ]
  }
}
